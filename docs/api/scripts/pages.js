var pages = [{"name":"open class AlwaysRendererTypeHandler(execution: ResultHandlerExecution) : RendererTypeHandler","description":"org.jetbrains.kotlinx.jupyter.api.AlwaysRendererTypeHandler","location":"api/org.jetbrains.kotlinx.jupyter.api/-always-renderer-type-handler/index.html","searchKeys":["AlwaysRendererTypeHandler","open class AlwaysRendererTypeHandler(execution: ResultHandlerExecution) : RendererTypeHandler"]},{"name":"fun AlwaysRendererTypeHandler(execution: ResultHandlerExecution)","description":"org.jetbrains.kotlinx.jupyter.api.AlwaysRendererTypeHandler.AlwaysRendererTypeHandler","location":"api/org.jetbrains.kotlinx.jupyter.api/-always-renderer-type-handler/-always-renderer-type-handler.html","searchKeys":["AlwaysRendererTypeHandler","fun AlwaysRendererTypeHandler(execution: ResultHandlerExecution)"]},{"name":"open override fun acceptsType(type: KClass<*>): Boolean","description":"org.jetbrains.kotlinx.jupyter.api.AlwaysRendererTypeHandler.acceptsType","location":"api/org.jetbrains.kotlinx.jupyter.api/-always-renderer-type-handler/accepts-type.html","searchKeys":["acceptsType","open override fun acceptsType(type: KClass<*>): Boolean"]},{"name":"open override fun acceptsType(type: KClass<*>): Boolean","description":"org.jetbrains.kotlinx.jupyter.api.ExactRendererTypeHandler.acceptsType","location":"api/org.jetbrains.kotlinx.jupyter.api/-exact-renderer-type-handler/accepts-type.html","searchKeys":["acceptsType","open override fun acceptsType(type: KClass<*>): Boolean"]},{"name":"abstract fun acceptsType(type: KType): Boolean","description":"org.jetbrains.kotlinx.jupyter.api.FieldHandler.acceptsType","location":"api/org.jetbrains.kotlinx.jupyter.api/-field-handler/accepts-type.html","searchKeys":["acceptsType","abstract fun acceptsType(type: KType): Boolean"]},{"name":"open override fun acceptsType(type: KType): Boolean","description":"org.jetbrains.kotlinx.jupyter.api.FieldHandlerByClass.acceptsType","location":"api/org.jetbrains.kotlinx.jupyter.api/-field-handler-by-class/accepts-type.html","searchKeys":["acceptsType","open override fun acceptsType(type: KType): Boolean"]},{"name":"abstract fun acceptsType(type: KClass<*>): Boolean","description":"org.jetbrains.kotlinx.jupyter.api.RendererTypeHandler.acceptsType","location":"api/org.jetbrains.kotlinx.jupyter.api/-renderer-type-handler/accepts-type.html","searchKeys":["acceptsType","abstract fun acceptsType(type: KClass<*>): Boolean"]},{"name":"open override fun acceptsType(type: KClass<*>): Boolean","description":"org.jetbrains.kotlinx.jupyter.api.SubtypeRendererTypeHandler.acceptsType","location":"api/org.jetbrains.kotlinx.jupyter.api/-subtype-renderer-type-handler/accepts-type.html","searchKeys":["acceptsType","open override fun acceptsType(type: KClass<*>): Boolean"]},{"name":"open override val execution: ResultHandlerExecution","description":"org.jetbrains.kotlinx.jupyter.api.AlwaysRendererTypeHandler.execution","location":"api/org.jetbrains.kotlinx.jupyter.api/-always-renderer-type-handler/execution.html","searchKeys":["execution","open override val execution: ResultHandlerExecution"]},{"name":"open override val execution: ResultHandlerCodeExecution","description":"org.jetbrains.kotlinx.jupyter.api.ExactRendererTypeHandler.execution","location":"api/org.jetbrains.kotlinx.jupyter.api/-exact-renderer-type-handler/execution.html","searchKeys":["execution","open override val execution: ResultHandlerCodeExecution"]},{"name":"abstract val execution: FieldHandlerExecution<*>","description":"org.jetbrains.kotlinx.jupyter.api.FieldHandler.execution","location":"api/org.jetbrains.kotlinx.jupyter.api/-field-handler/execution.html","searchKeys":["execution","abstract val execution: FieldHandlerExecution<*>"]},{"name":"open override val execution: FieldHandlerExecution<*>","description":"org.jetbrains.kotlinx.jupyter.api.FieldHandlerByClass.execution","location":"api/org.jetbrains.kotlinx.jupyter.api/-field-handler-by-class/execution.html","searchKeys":["execution","open override val execution: FieldHandlerExecution<*>"]},{"name":"abstract val execution: ResultHandlerExecution","description":"org.jetbrains.kotlinx.jupyter.api.RendererTypeHandler.execution","location":"api/org.jetbrains.kotlinx.jupyter.api/-renderer-type-handler/execution.html","searchKeys":["execution","abstract val execution: ResultHandlerExecution"]},{"name":"open override val execution: ResultHandlerExecution","description":"org.jetbrains.kotlinx.jupyter.api.SubtypeRendererTypeHandler.execution","location":"api/org.jetbrains.kotlinx.jupyter.api/-subtype-renderer-type-handler/execution.html","searchKeys":["execution","open override val execution: ResultHandlerExecution"]},{"name":"open override fun replaceVariables(mapping: Map<String, String>): AlwaysRendererTypeHandler","description":"org.jetbrains.kotlinx.jupyter.api.AlwaysRendererTypeHandler.replaceVariables","location":"api/org.jetbrains.kotlinx.jupyter.api/-always-renderer-type-handler/replace-variables.html","searchKeys":["replaceVariables","open override fun replaceVariables(mapping: Map<String, String>): AlwaysRendererTypeHandler"]},{"name":"open override fun replaceVariables(mapping: Map<String, String>): RendererTypeHandler","description":"org.jetbrains.kotlinx.jupyter.api.ExactRendererTypeHandler.replaceVariables","location":"api/org.jetbrains.kotlinx.jupyter.api/-exact-renderer-type-handler/replace-variables.html","searchKeys":["replaceVariables","open override fun replaceVariables(mapping: Map<String, String>): RendererTypeHandler"]},{"name":"open override fun replaceVariables(mapping: Map<String, String>): ResultHandlerCodeExecution","description":"org.jetbrains.kotlinx.jupyter.api.ResultHandlerCodeExecution.replaceVariables","location":"api/org.jetbrains.kotlinx.jupyter.api/-result-handler-code-execution/replace-variables.html","searchKeys":["replaceVariables","open override fun replaceVariables(mapping: Map<String, String>): ResultHandlerCodeExecution"]},{"name":"open override fun replaceVariables(mapping: Map<String, String>): ResultHandlerExecution","description":"org.jetbrains.kotlinx.jupyter.api.ResultHandlerExecution.replaceVariables","location":"api/org.jetbrains.kotlinx.jupyter.api/-result-handler-execution/replace-variables.html","searchKeys":["replaceVariables","open override fun replaceVariables(mapping: Map<String, String>): ResultHandlerExecution"]},{"name":"open override fun replaceVariables(mapping: Map<String, String>): SubtypeRendererTypeHandler","description":"org.jetbrains.kotlinx.jupyter.api.SubtypeRendererTypeHandler.replaceVariables","location":"api/org.jetbrains.kotlinx.jupyter.api/-subtype-renderer-type-handler/replace-variables.html","searchKeys":["replaceVariables","open override fun replaceVariables(mapping: Map<String, String>): SubtypeRendererTypeHandler"]},{"name":"open override fun replaceVariables(mapping: Map<String, String>): CodeExecution","description":"org.jetbrains.kotlinx.jupyter.api.libraries.CodeExecution.replaceVariables","location":"api/org.jetbrains.kotlinx.jupyter.api.libraries/-code-execution/replace-variables.html","searchKeys":["replaceVariables","open override fun replaceVariables(mapping: Map<String, String>): CodeExecution"]},{"name":"open override fun replaceVariables(mapping: Map<String, String>): Execution<T>","description":"org.jetbrains.kotlinx.jupyter.api.libraries.Execution.replaceVariables","location":"api/org.jetbrains.kotlinx.jupyter.api.libraries/-execution/replace-variables.html","searchKeys":["replaceVariables","open override fun replaceVariables(mapping: Map<String, String>): Execution<T>"]},{"name":"open override fun replaceVariables(mapping: Map<String, String>): LibraryResource","description":"org.jetbrains.kotlinx.jupyter.api.libraries.LibraryResource.replaceVariables","location":"api/org.jetbrains.kotlinx.jupyter.api.libraries/-library-resource/replace-variables.html","searchKeys":["replaceVariables","open override fun replaceVariables(mapping: Map<String, String>): LibraryResource"]},{"name":"open override fun replaceVariables(mapping: Map<String, String>): ResourceFallbacksBundle","description":"org.jetbrains.kotlinx.jupyter.api.libraries.ResourceFallbacksBundle.replaceVariables","location":"api/org.jetbrains.kotlinx.jupyter.api.libraries/-resource-fallbacks-bundle/replace-variables.html","searchKeys":["replaceVariables","open override fun replaceVariables(mapping: Map<String, String>): ResourceFallbacksBundle"]},{"name":"open override fun replaceVariables(mapping: Map<String, String>): ResourceLocation","description":"org.jetbrains.kotlinx.jupyter.api.libraries.ResourceLocation.replaceVariables","location":"api/org.jetbrains.kotlinx.jupyter.api.libraries/-resource-location/replace-variables.html","searchKeys":["replaceVariables","open override fun replaceVariables(mapping: Map<String, String>): ResourceLocation"]},{"name":"abstract fun replaceVariables(mapping: Map<String, String>): T","description":"org.jetbrains.kotlinx.jupyter.api.libraries.VariablesSubstitutionAware.replaceVariables","location":"api/org.jetbrains.kotlinx.jupyter.api.libraries/-variables-substitution-aware/replace-variables.html","searchKeys":["replaceVariables","abstract fun replaceVariables(mapping: Map<String, String>): T"]},{"name":"class AnnotationHandler(annotation: KClass<out Annotation>, callback: ClassDeclarationsCallback)","description":"org.jetbrains.kotlinx.jupyter.api.AnnotationHandler","location":"api/org.jetbrains.kotlinx.jupyter.api/-annotation-handler/index.html","searchKeys":["AnnotationHandler","class AnnotationHandler(annotation: KClass<out Annotation>, callback: ClassDeclarationsCallback)"]},{"name":"fun AnnotationHandler(annotation: KClass<out Annotation>, callback: ClassDeclarationsCallback)","description":"org.jetbrains.kotlinx.jupyter.api.AnnotationHandler.AnnotationHandler","location":"api/org.jetbrains.kotlinx.jupyter.api/-annotation-handler/-annotation-handler.html","searchKeys":["AnnotationHandler","fun AnnotationHandler(annotation: KClass<out Annotation>, callback: ClassDeclarationsCallback)"]},{"name":"val annotation: KClass<out Annotation>","description":"org.jetbrains.kotlinx.jupyter.api.AnnotationHandler.annotation","location":"api/org.jetbrains.kotlinx.jupyter.api/-annotation-handler/annotation.html","searchKeys":["annotation","val annotation: KClass<out Annotation>"]},{"name":"val callback: ClassDeclarationsCallback","description":"org.jetbrains.kotlinx.jupyter.api.AnnotationHandler.callback","location":"api/org.jetbrains.kotlinx.jupyter.api/-annotation-handler/callback.html","searchKeys":["callback","val callback: ClassDeclarationsCallback"]},{"name":"interface CodeCell","description":"org.jetbrains.kotlinx.jupyter.api.CodeCell","location":"api/org.jetbrains.kotlinx.jupyter.api/-code-cell/index.html","searchKeys":["CodeCell","interface CodeCell"]},{"name":"abstract val code: String","description":"org.jetbrains.kotlinx.jupyter.api.CodeCell.code","location":"api/org.jetbrains.kotlinx.jupyter.api/-code-cell/code.html","searchKeys":["code","abstract val code: String"]},{"name":"val code: Code","description":"org.jetbrains.kotlinx.jupyter.api.ResultHandlerCodeExecution.code","location":"api/org.jetbrains.kotlinx.jupyter.api/-result-handler-code-execution/code.html","searchKeys":["code","val code: Code"]},{"name":"val code: Code","description":"org.jetbrains.kotlinx.jupyter.api.libraries.CodeExecution.code","location":"api/org.jetbrains.kotlinx.jupyter.api.libraries/-code-execution/code.html","searchKeys":["code","val code: Code"]},{"name":"abstract val displays: DisplayContainer","description":"org.jetbrains.kotlinx.jupyter.api.CodeCell.displays","location":"api/org.jetbrains.kotlinx.jupyter.api/-code-cell/displays.html","searchKeys":["displays","abstract val displays: DisplayContainer"]},{"name":"abstract val displays: DisplayContainer","description":"org.jetbrains.kotlinx.jupyter.api.Notebook.displays","location":"api/org.jetbrains.kotlinx.jupyter.api/-notebook/displays.html","searchKeys":["displays","abstract val displays: DisplayContainer"]},{"name":"abstract val id: Int","description":"org.jetbrains.kotlinx.jupyter.api.CodeCell.id","location":"api/org.jetbrains.kotlinx.jupyter.api/-code-cell/id.html","searchKeys":["id","abstract val id: Int"]},{"name":"open val id: String?","description":"org.jetbrains.kotlinx.jupyter.api.DisplayResult.id","location":"api/org.jetbrains.kotlinx.jupyter.api/-display-result/id.html","searchKeys":["id","open val id: String?"]},{"name":"open override val id: String? = null","description":"org.jetbrains.kotlinx.jupyter.api.MimeTypedResult.id","location":"api/org.jetbrains.kotlinx.jupyter.api/-mime-typed-result/id.html","searchKeys":["id","open override val id: String? = null"]},{"name":"abstract val internalId: Int","description":"org.jetbrains.kotlinx.jupyter.api.CodeCell.internalId","location":"api/org.jetbrains.kotlinx.jupyter.api/-code-cell/internal-id.html","searchKeys":["internalId","abstract val internalId: Int"]},{"name":"abstract val notebook: Notebook<*>","description":"org.jetbrains.kotlinx.jupyter.api.CodeCell.notebook","location":"api/org.jetbrains.kotlinx.jupyter.api/-code-cell/notebook.html","searchKeys":["notebook","abstract val notebook: Notebook<*>"]},{"name":"abstract val preprocessedCode: String","description":"org.jetbrains.kotlinx.jupyter.api.CodeCell.preprocessedCode","location":"api/org.jetbrains.kotlinx.jupyter.api/-code-cell/preprocessed-code.html","searchKeys":["preprocessedCode","abstract val preprocessedCode: String"]},{"name":"abstract val prevCell: CodeCell?","description":"org.jetbrains.kotlinx.jupyter.api.CodeCell.prevCell","location":"api/org.jetbrains.kotlinx.jupyter.api/-code-cell/prev-cell.html","searchKeys":["prevCell","abstract val prevCell: CodeCell?"]},{"name":"abstract val result: Any?","description":"org.jetbrains.kotlinx.jupyter.api.CodeCell.result","location":"api/org.jetbrains.kotlinx.jupyter.api/-code-cell/result.html","searchKeys":["result","abstract val result: Any?"]},{"name":"abstract val streamOutput: String","description":"org.jetbrains.kotlinx.jupyter.api.CodeCell.streamOutput","location":"api/org.jetbrains.kotlinx.jupyter.api/-code-cell/stream-output.html","searchKeys":["streamOutput","abstract val streamOutput: String"]},{"name":"interface DisplayContainer","description":"org.jetbrains.kotlinx.jupyter.api.DisplayContainer","location":"api/org.jetbrains.kotlinx.jupyter.api/-display-container/index.html","searchKeys":["DisplayContainer","interface DisplayContainer"]},{"name":"abstract fun getAll(): List<DisplayResultWithCell>","description":"org.jetbrains.kotlinx.jupyter.api.DisplayContainer.getAll","location":"api/org.jetbrains.kotlinx.jupyter.api/-display-container/get-all.html","searchKeys":["getAll","abstract fun getAll(): List<DisplayResultWithCell>"]},{"name":"abstract fun getById(id: String?): List<DisplayResultWithCell>","description":"org.jetbrains.kotlinx.jupyter.api.DisplayContainer.getById","location":"api/org.jetbrains.kotlinx.jupyter.api/-display-container/get-by-id.html","searchKeys":["getById","abstract fun getById(id: String?): List<DisplayResultWithCell>"]},{"name":"interface DisplayResult : Renderable","description":"org.jetbrains.kotlinx.jupyter.api.DisplayResult","location":"api/org.jetbrains.kotlinx.jupyter.api/-display-result/index.html","searchKeys":["DisplayResult","interface DisplayResult : Renderable"]},{"name":"open override fun render(notebook: Notebook<*>): DisplayResult","description":"org.jetbrains.kotlinx.jupyter.api.DisplayResult.render","location":"api/org.jetbrains.kotlinx.jupyter.api/-display-result/render.html","searchKeys":["render","open override fun render(notebook: Notebook<*>): DisplayResult"]},{"name":"abstract fun render(notebook: Notebook<*>): DisplayResult","description":"org.jetbrains.kotlinx.jupyter.api.Renderable.render","location":"api/org.jetbrains.kotlinx.jupyter.api/-renderable/render.html","searchKeys":["render","abstract fun render(notebook: Notebook<*>): DisplayResult"]},{"name":"inline fun <T : Any> render(noinline renderer: (T) -> Any)","description":"org.jetbrains.kotlinx.jupyter.api.libraries.JupyterIntegration.Builder.render","location":"api/org.jetbrains.kotlinx.jupyter.api.libraries/-jupyter-integration/-builder/render.html","searchKeys":["render","inline fun <T : Any> render(noinline renderer: (T) -> Any)"]},{"name":"abstract fun toJson(additionalMetadata: JsonObject = JsonObject(mapOf())): JsonObject","description":"org.jetbrains.kotlinx.jupyter.api.DisplayResult.toJson","location":"api/org.jetbrains.kotlinx.jupyter.api/-display-result/to-json.html","searchKeys":["toJson","abstract fun toJson(additionalMetadata: JsonObject = JsonObject(mapOf())): JsonObject"]},{"name":"open override fun toJson(additionalMetadata: JsonObject): JsonObject","description":"org.jetbrains.kotlinx.jupyter.api.MimeTypedResult.toJson","location":"api/org.jetbrains.kotlinx.jupyter.api/-mime-typed-result/to-json.html","searchKeys":["toJson","open override fun toJson(additionalMetadata: JsonObject): JsonObject"]},{"name":"fun DisplayResult?.toJson(): JsonObject","description":"org.jetbrains.kotlinx.jupyter.api.toJson","location":"api/org.jetbrains.kotlinx.jupyter.api/to-json.html","searchKeys":["toJson","fun DisplayResult?.toJson(): JsonObject"]},{"name":"interface DisplayResultWithCell : DisplayResult","description":"org.jetbrains.kotlinx.jupyter.api.DisplayResultWithCell","location":"api/org.jetbrains.kotlinx.jupyter.api/-display-result-with-cell/index.html","searchKeys":["DisplayResultWithCell","interface DisplayResultWithCell : DisplayResult"]},{"name":"abstract val cell: CodeCell","description":"org.jetbrains.kotlinx.jupyter.api.DisplayResultWithCell.cell","location":"api/org.jetbrains.kotlinx.jupyter.api/-display-result-with-cell/cell.html","searchKeys":["cell","abstract val cell: CodeCell"]},{"name":"class ExactRendererTypeHandler(className: TypeName, execution: ResultHandlerCodeExecution) : RendererTypeHandler","description":"org.jetbrains.kotlinx.jupyter.api.ExactRendererTypeHandler","location":"api/org.jetbrains.kotlinx.jupyter.api/-exact-renderer-type-handler/index.html","searchKeys":["ExactRendererTypeHandler","class ExactRendererTypeHandler(className: TypeName, execution: ResultHandlerCodeExecution) : RendererTypeHandler"]},{"name":"fun ExactRendererTypeHandler(className: TypeName, execution: ResultHandlerCodeExecution)","description":"org.jetbrains.kotlinx.jupyter.api.ExactRendererTypeHandler.ExactRendererTypeHandler","location":"api/org.jetbrains.kotlinx.jupyter.api/-exact-renderer-type-handler/-exact-renderer-type-handler.html","searchKeys":["ExactRendererTypeHandler","fun ExactRendererTypeHandler(className: TypeName, execution: ResultHandlerCodeExecution)"]},{"name":"val className: TypeName","description":"org.jetbrains.kotlinx.jupyter.api.ExactRendererTypeHandler.className","location":"api/org.jetbrains.kotlinx.jupyter.api/-exact-renderer-type-handler/class-name.html","searchKeys":["className","val className: TypeName"]},{"name":"interface FieldHandler","description":"org.jetbrains.kotlinx.jupyter.api.FieldHandler","location":"api/org.jetbrains.kotlinx.jupyter.api/-field-handler/index.html","searchKeys":["FieldHandler","interface FieldHandler"]},{"name":"class FieldHandlerByClass(kClass: KClass<out Any>, execution: FieldHandlerExecution<*>) : FieldHandler","description":"org.jetbrains.kotlinx.jupyter.api.FieldHandlerByClass","location":"api/org.jetbrains.kotlinx.jupyter.api/-field-handler-by-class/index.html","searchKeys":["FieldHandlerByClass","class FieldHandlerByClass(kClass: KClass<out Any>, execution: FieldHandlerExecution<*>) : FieldHandler"]},{"name":"fun FieldHandlerByClass(kClass: KClass<out Any>, execution: FieldHandlerExecution<*>)","description":"org.jetbrains.kotlinx.jupyter.api.FieldHandlerByClass.FieldHandlerByClass","location":"api/org.jetbrains.kotlinx.jupyter.api/-field-handler-by-class/-field-handler-by-class.html","searchKeys":["FieldHandlerByClass","fun FieldHandlerByClass(kClass: KClass<out Any>, execution: FieldHandlerExecution<*>)"]},{"name":"fun fun interface FieldHandlerExecution<T>","description":"org.jetbrains.kotlinx.jupyter.api.FieldHandlerExecution","location":"api/org.jetbrains.kotlinx.jupyter.api/-field-handler-execution/index.html","searchKeys":["FieldHandlerExecution","fun fun interface FieldHandlerExecution<T>"]},{"name":"abstract fun execute(host: KotlinKernelHost, value: T, property: KProperty<*>)","description":"org.jetbrains.kotlinx.jupyter.api.FieldHandlerExecution.execute","location":"api/org.jetbrains.kotlinx.jupyter.api/-field-handler-execution/execute.html","searchKeys":["execute","abstract fun execute(host: KotlinKernelHost, value: T, property: KProperty<*>)"]},{"name":"abstract fun execute(code: Code): FieldValue","description":"org.jetbrains.kotlinx.jupyter.api.KotlinKernelHost.execute","location":"api/org.jetbrains.kotlinx.jupyter.api/-kotlin-kernel-host/execute.html","searchKeys":["execute","abstract fun execute(code: Code): FieldValue"]},{"name":"open override fun execute(host: ExecutionHost, result: FieldValue): FieldValue","description":"org.jetbrains.kotlinx.jupyter.api.ResultHandlerCodeExecution.execute","location":"api/org.jetbrains.kotlinx.jupyter.api/-result-handler-code-execution/execute.html","searchKeys":["execute","open override fun execute(host: ExecutionHost, result: FieldValue): FieldValue"]},{"name":"abstract fun execute(host: ExecutionHost, result: FieldValue): FieldValue","description":"org.jetbrains.kotlinx.jupyter.api.ResultHandlerExecution.execute","location":"api/org.jetbrains.kotlinx.jupyter.api/-result-handler-execution/execute.html","searchKeys":["execute","abstract fun execute(host: ExecutionHost, result: FieldValue): FieldValue"]},{"name":"open override fun execute(host: ExecutionHost): Any?","description":"org.jetbrains.kotlinx.jupyter.api.libraries.CodeExecution.execute","location":"api/org.jetbrains.kotlinx.jupyter.api.libraries/-code-execution/execute.html","searchKeys":["execute","open override fun execute(host: ExecutionHost): Any?"]},{"name":"open override fun execute(host: ExecutionHost): T","description":"org.jetbrains.kotlinx.jupyter.api.libraries.DelegatedExecution.execute","location":"api/org.jetbrains.kotlinx.jupyter.api.libraries/-delegated-execution/execute.html","searchKeys":["execute","open override fun execute(host: ExecutionHost): T"]},{"name":"abstract fun execute(host: ExecutionHost): T","description":"org.jetbrains.kotlinx.jupyter.api.libraries.Execution.execute","location":"api/org.jetbrains.kotlinx.jupyter.api.libraries/-execution/execute.html","searchKeys":["execute","abstract fun execute(host: ExecutionHost): T"]},{"name":"data class FieldValue(value: Any?, name: String?)","description":"org.jetbrains.kotlinx.jupyter.api.FieldValue","location":"api/org.jetbrains.kotlinx.jupyter.api/-field-value/index.html","searchKeys":["FieldValue","data class FieldValue(value: Any?, name: String?)"]},{"name":"fun FieldValue(value: Any?, name: String?)","description":"org.jetbrains.kotlinx.jupyter.api.FieldValue.FieldValue","location":"api/org.jetbrains.kotlinx.jupyter.api/-field-value/-field-value.html","searchKeys":["FieldValue","fun FieldValue(value: Any?, name: String?)"]},{"name":"operator fun component1(): Any?","description":"org.jetbrains.kotlinx.jupyter.api.FieldValue.component1","location":"api/org.jetbrains.kotlinx.jupyter.api/-field-value/component1.html","searchKeys":["component1","operator fun component1(): Any?"]},{"name":"operator fun component1(): TypeName","description":"org.jetbrains.kotlinx.jupyter.api.libraries.LibrariesDefinitionDeclaration.component1","location":"api/org.jetbrains.kotlinx.jupyter.api.libraries/-libraries-definition-declaration/component1.html","searchKeys":["component1","operator fun component1(): TypeName"]},{"name":"operator fun component1(): TypeName","description":"org.jetbrains.kotlinx.jupyter.api.libraries.LibrariesProducerDeclaration.component1","location":"api/org.jetbrains.kotlinx.jupyter.api.libraries/-libraries-producer-declaration/component1.html","searchKeys":["component1","operator fun component1(): TypeName"]},{"name":"operator fun component1(): List<LibrariesDefinitionDeclaration>","description":"org.jetbrains.kotlinx.jupyter.api.libraries.LibrariesScanResult.component1","location":"api/org.jetbrains.kotlinx.jupyter.api.libraries/-libraries-scan-result/component1.html","searchKeys":["component1","operator fun component1(): List<LibrariesDefinitionDeclaration>"]},{"name":"operator fun component1(): List<ResourceFallbacksBundle>","description":"org.jetbrains.kotlinx.jupyter.api.libraries.LibraryResource.component1","location":"api/org.jetbrains.kotlinx.jupyter.api.libraries/-library-resource/component1.html","searchKeys":["component1","operator fun component1(): List<ResourceFallbacksBundle>"]},{"name":"operator fun component1(): List<ResourceLocation>","description":"org.jetbrains.kotlinx.jupyter.api.libraries.ResourceFallbacksBundle.component1","location":"api/org.jetbrains.kotlinx.jupyter.api.libraries/-resource-fallbacks-bundle/component1.html","searchKeys":["component1","operator fun component1(): List<ResourceLocation>"]},{"name":"operator fun component1(): String","description":"org.jetbrains.kotlinx.jupyter.api.libraries.ResourceLocation.component1","location":"api/org.jetbrains.kotlinx.jupyter.api.libraries/-resource-location/component1.html","searchKeys":["component1","operator fun component1(): String"]},{"name":"operator fun component2(): String?","description":"org.jetbrains.kotlinx.jupyter.api.FieldValue.component2","location":"api/org.jetbrains.kotlinx.jupyter.api/-field-value/component2.html","searchKeys":["component2","operator fun component2(): String?"]},{"name":"operator fun component2(): List<LibrariesProducerDeclaration>","description":"org.jetbrains.kotlinx.jupyter.api.libraries.LibrariesScanResult.component2","location":"api/org.jetbrains.kotlinx.jupyter.api.libraries/-libraries-scan-result/component2.html","searchKeys":["component2","operator fun component2(): List<LibrariesProducerDeclaration>"]},{"name":"operator fun component2(): ResourceType","description":"org.jetbrains.kotlinx.jupyter.api.libraries.LibraryResource.component2","location":"api/org.jetbrains.kotlinx.jupyter.api.libraries/-library-resource/component2.html","searchKeys":["component2","operator fun component2(): ResourceType"]},{"name":"operator fun component2(): ResourcePathType","description":"org.jetbrains.kotlinx.jupyter.api.libraries.ResourceLocation.component2","location":"api/org.jetbrains.kotlinx.jupyter.api.libraries/-resource-location/component2.html","searchKeys":["component2","operator fun component2(): ResourcePathType"]},{"name":"fun copy(value: Any?, name: String?): FieldValue","description":"org.jetbrains.kotlinx.jupyter.api.FieldValue.copy","location":"api/org.jetbrains.kotlinx.jupyter.api/-field-value/copy.html","searchKeys":["copy","fun copy(value: Any?, name: String?): FieldValue"]},{"name":"fun copy(fqn: TypeName): LibrariesDefinitionDeclaration","description":"org.jetbrains.kotlinx.jupyter.api.libraries.LibrariesDefinitionDeclaration.copy","location":"api/org.jetbrains.kotlinx.jupyter.api.libraries/-libraries-definition-declaration/copy.html","searchKeys":["copy","fun copy(fqn: TypeName): LibrariesDefinitionDeclaration"]},{"name":"fun copy(fqn: TypeName): LibrariesProducerDeclaration","description":"org.jetbrains.kotlinx.jupyter.api.libraries.LibrariesProducerDeclaration.copy","location":"api/org.jetbrains.kotlinx.jupyter.api.libraries/-libraries-producer-declaration/copy.html","searchKeys":["copy","fun copy(fqn: TypeName): LibrariesProducerDeclaration"]},{"name":"fun copy(definitions: List<LibrariesDefinitionDeclaration> = emptyList(), producers: List<LibrariesProducerDeclaration> = emptyList()): LibrariesScanResult","description":"org.jetbrains.kotlinx.jupyter.api.libraries.LibrariesScanResult.copy","location":"api/org.jetbrains.kotlinx.jupyter.api.libraries/-libraries-scan-result/copy.html","searchKeys":["copy","fun copy(definitions: List<LibrariesDefinitionDeclaration> = emptyList(), producers: List<LibrariesProducerDeclaration> = emptyList()): LibrariesScanResult"]},{"name":"fun copy(bundles: List<ResourceFallbacksBundle>, type: ResourceType, name: String): LibraryResource","description":"org.jetbrains.kotlinx.jupyter.api.libraries.LibraryResource.copy","location":"api/org.jetbrains.kotlinx.jupyter.api.libraries/-library-resource/copy.html","searchKeys":["copy","fun copy(bundles: List<ResourceFallbacksBundle>, type: ResourceType, name: String): LibraryResource"]},{"name":"fun copy(locations: List<ResourceLocation>): ResourceFallbacksBundle","description":"org.jetbrains.kotlinx.jupyter.api.libraries.ResourceFallbacksBundle.copy","location":"api/org.jetbrains.kotlinx.jupyter.api.libraries/-resource-fallbacks-bundle/copy.html","searchKeys":["copy","fun copy(locations: List<ResourceLocation>): ResourceFallbacksBundle"]},{"name":"fun copy(path: String, type: ResourcePathType): ResourceLocation","description":"org.jetbrains.kotlinx.jupyter.api.libraries.ResourceLocation.copy","location":"api/org.jetbrains.kotlinx.jupyter.api.libraries/-resource-location/copy.html","searchKeys":["copy","fun copy(path: String, type: ResourcePathType): ResourceLocation"]},{"name":"val name: String?","description":"org.jetbrains.kotlinx.jupyter.api.FieldValue.name","location":"api/org.jetbrains.kotlinx.jupyter.api/-field-value/name.html","searchKeys":["name","val name: String?"]},{"name":"val name: String","description":"org.jetbrains.kotlinx.jupyter.api.libraries.LibraryResource.name","location":"api/org.jetbrains.kotlinx.jupyter.api.libraries/-library-resource/name.html","searchKeys":["name","val name: String"]},{"name":"val name: String","description":"org.jetbrains.kotlinx.jupyter.api.libraries.ResourcePathType.CLASSPATH_PATH.name","location":"api/org.jetbrains.kotlinx.jupyter.api.libraries/-resource-path-type/-c-l-a-s-s-p-a-t-h_-p-a-t-h/name.html","searchKeys":["name","val name: String"]},{"name":"val name: String","description":"org.jetbrains.kotlinx.jupyter.api.libraries.ResourcePathType.LOCAL_PATH.name","location":"api/org.jetbrains.kotlinx.jupyter.api.libraries/-resource-path-type/-l-o-c-a-l_-p-a-t-h/name.html","searchKeys":["name","val name: String"]},{"name":"val name: String","description":"org.jetbrains.kotlinx.jupyter.api.libraries.ResourcePathType.URL.name","location":"api/org.jetbrains.kotlinx.jupyter.api.libraries/-resource-path-type/-u-r-l/name.html","searchKeys":["name","val name: String"]},{"name":"val name: String","description":"org.jetbrains.kotlinx.jupyter.api.libraries.ResourcePathType.URL_EMBEDDED.name","location":"api/org.jetbrains.kotlinx.jupyter.api.libraries/-resource-path-type/-u-r-l_-e-m-b-e-d-d-e-d/name.html","searchKeys":["name","val name: String"]},{"name":"val name: String","description":"org.jetbrains.kotlinx.jupyter.api.libraries.ResourceType.CSS.name","location":"api/org.jetbrains.kotlinx.jupyter.api.libraries/-resource-type/-c-s-s/name.html","searchKeys":["name","val name: String"]},{"name":"val name: String","description":"org.jetbrains.kotlinx.jupyter.api.libraries.ResourceType.JS.name","location":"api/org.jetbrains.kotlinx.jupyter.api.libraries/-resource-type/-j-s/name.html","searchKeys":["name","val name: String"]},{"name":"val value: Any?","description":"org.jetbrains.kotlinx.jupyter.api.FieldValue.value","location":"api/org.jetbrains.kotlinx.jupyter.api/-field-value/value.html","searchKeys":["value","val value: Any?"]},{"name":"fun HTML(text: String, isolated: Boolean = false): MimeTypedResult","description":"org.jetbrains.kotlinx.jupyter.api.HTML","location":"api/org.jetbrains.kotlinx.jupyter.api/-h-t-m-l.html","searchKeys":["HTML","fun HTML(text: String, isolated: Boolean = false): MimeTypedResult"]},{"name":"interface JREInfoProvider","description":"org.jetbrains.kotlinx.jupyter.api.JREInfoProvider","location":"api/org.jetbrains.kotlinx.jupyter.api/-j-r-e-info-provider/index.html","searchKeys":["JREInfoProvider","interface JREInfoProvider"]},{"name":"abstract fun assertVersion(message: String = \"JRE version requirements are not satisfied\", condition: (Int) -> Boolean)","description":"org.jetbrains.kotlinx.jupyter.api.JREInfoProvider.assertVersion","location":"api/org.jetbrains.kotlinx.jupyter.api/-j-r-e-info-provider/assert-version.html","searchKeys":["assertVersion","abstract fun assertVersion(message: String = \"JRE version requirements are not satisfied\", condition: (Int) -> Boolean)"]},{"name":"abstract fun assertVersionAtLeast(minVersion: Int)","description":"org.jetbrains.kotlinx.jupyter.api.JREInfoProvider.assertVersionAtLeast","location":"api/org.jetbrains.kotlinx.jupyter.api/-j-r-e-info-provider/assert-version-at-least.html","searchKeys":["assertVersionAtLeast","abstract fun assertVersionAtLeast(minVersion: Int)"]},{"name":"abstract fun assertVersionInRange(minVersion: Int, maxVersion: Int)","description":"org.jetbrains.kotlinx.jupyter.api.JREInfoProvider.assertVersionInRange","location":"api/org.jetbrains.kotlinx.jupyter.api/-j-r-e-info-provider/assert-version-in-range.html","searchKeys":["assertVersionInRange","abstract fun assertVersionInRange(minVersion: Int, maxVersion: Int)"]},{"name":"abstract val version: String","description":"org.jetbrains.kotlinx.jupyter.api.JREInfoProvider.version","location":"api/org.jetbrains.kotlinx.jupyter.api/-j-r-e-info-provider/version.html","searchKeys":["version","abstract val version: String"]},{"name":"abstract val versionAsInt: Int","description":"org.jetbrains.kotlinx.jupyter.api.JREInfoProvider.versionAsInt","location":"api/org.jetbrains.kotlinx.jupyter.api/-j-r-e-info-provider/version-as-int.html","searchKeys":["versionAsInt","abstract val versionAsInt: Int"]},{"name":"interface KotlinKernelHost","description":"org.jetbrains.kotlinx.jupyter.api.KotlinKernelHost","location":"api/org.jetbrains.kotlinx.jupyter.api/-kotlin-kernel-host/index.html","searchKeys":["KotlinKernelHost","interface KotlinKernelHost"]},{"name":"abstract fun addLibrary(library: LibraryDefinition)","description":"org.jetbrains.kotlinx.jupyter.api.KotlinKernelHost.addLibrary","location":"api/org.jetbrains.kotlinx.jupyter.api/-kotlin-kernel-host/add-library.html","searchKeys":["addLibrary","abstract fun addLibrary(library: LibraryDefinition)"]},{"name":"abstract fun display(value: Any)","description":"org.jetbrains.kotlinx.jupyter.api.KotlinKernelHost.display","location":"api/org.jetbrains.kotlinx.jupyter.api/-kotlin-kernel-host/display.html","searchKeys":["display","abstract fun display(value: Any)"]},{"name":"abstract fun updateDisplay(value: Any, id: String? = null)","description":"org.jetbrains.kotlinx.jupyter.api.KotlinKernelHost.updateDisplay","location":"api/org.jetbrains.kotlinx.jupyter.api/-kotlin-kernel-host/update-display.html","searchKeys":["updateDisplay","abstract fun updateDisplay(value: Any, id: String? = null)"]},{"name":"class KotlinKernelVersion : Comparable<KotlinKernelVersion> ","description":"org.jetbrains.kotlinx.jupyter.api.KotlinKernelVersion","location":"api/org.jetbrains.kotlinx.jupyter.api/-kotlin-kernel-version/index.html","searchKeys":["KotlinKernelVersion","class KotlinKernelVersion : Comparable<KotlinKernelVersion> "]},{"name":"object Companion","description":"org.jetbrains.kotlinx.jupyter.api.KotlinKernelVersion.Companion","location":"api/org.jetbrains.kotlinx.jupyter.api/-kotlin-kernel-version/-companion/index.html","searchKeys":["Companion","object Companion"]},{"name":"const val DEV_PREFIX: String","description":"org.jetbrains.kotlinx.jupyter.api.KotlinKernelVersion.Companion.DEV_PREFIX","location":"api/org.jetbrains.kotlinx.jupyter.api/-kotlin-kernel-version/-companion/-d-e-v_-p-r-e-f-i-x.html","searchKeys":["DEV_PREFIX","const val DEV_PREFIX: String"]},{"name":"const val SEP: Char = '.'","description":"org.jetbrains.kotlinx.jupyter.api.KotlinKernelVersion.Companion.SEP","location":"api/org.jetbrains.kotlinx.jupyter.api/-kotlin-kernel-version/-companion/-s-e-p.html","searchKeys":["SEP","const val SEP: Char = '.'"]},{"name":"fun KotlinKernelVersion?.toMaybeUnspecifiedString(): String","description":"org.jetbrains.kotlinx.jupyter.api.KotlinKernelVersion.Companion.toMaybeUnspecifiedString","location":"api/org.jetbrains.kotlinx.jupyter.api/-kotlin-kernel-version/-companion/to-maybe-unspecified-string.html","searchKeys":["toMaybeUnspecifiedString","fun KotlinKernelVersion?.toMaybeUnspecifiedString(): String"]},{"name":"val build: Int?","description":"org.jetbrains.kotlinx.jupyter.api.KotlinKernelVersion.build","location":"api/org.jetbrains.kotlinx.jupyter.api/-kotlin-kernel-version/build.html","searchKeys":["build","val build: Int?"]},{"name":"open operator override fun compareTo(other: KotlinKernelVersion): Int","description":"org.jetbrains.kotlinx.jupyter.api.KotlinKernelVersion.compareTo","location":"api/org.jetbrains.kotlinx.jupyter.api/-kotlin-kernel-version/compare-to.html","searchKeys":["compareTo","open operator override fun compareTo(other: KotlinKernelVersion): Int"]},{"name":"val dev: Int?","description":"org.jetbrains.kotlinx.jupyter.api.KotlinKernelVersion.dev","location":"api/org.jetbrains.kotlinx.jupyter.api/-kotlin-kernel-version/dev.html","searchKeys":["dev","val dev: Int?"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"org.jetbrains.kotlinx.jupyter.api.KotlinKernelVersion.equals","location":"api/org.jetbrains.kotlinx.jupyter.api/-kotlin-kernel-version/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean"]},{"name":"open override fun hashCode(): Int","description":"org.jetbrains.kotlinx.jupyter.api.KotlinKernelVersion.hashCode","location":"api/org.jetbrains.kotlinx.jupyter.api/-kotlin-kernel-version/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int"]},{"name":"val major: Int","description":"org.jetbrains.kotlinx.jupyter.api.KotlinKernelVersion.major","location":"api/org.jetbrains.kotlinx.jupyter.api/-kotlin-kernel-version/major.html","searchKeys":["major","val major: Int"]},{"name":"val micro: Int","description":"org.jetbrains.kotlinx.jupyter.api.KotlinKernelVersion.micro","location":"api/org.jetbrains.kotlinx.jupyter.api/-kotlin-kernel-version/micro.html","searchKeys":["micro","val micro: Int"]},{"name":"val minor: Int","description":"org.jetbrains.kotlinx.jupyter.api.KotlinKernelVersion.minor","location":"api/org.jetbrains.kotlinx.jupyter.api/-kotlin-kernel-version/minor.html","searchKeys":["minor","val minor: Int"]},{"name":"open override fun toString(): String","description":"org.jetbrains.kotlinx.jupyter.api.KotlinKernelVersion.toString","location":"api/org.jetbrains.kotlinx.jupyter.api/-kotlin-kernel-version/to-string.html","searchKeys":["toString","open override fun toString(): String"]},{"name":"fun MIME(vararg mimeToData: Pair<String, String>): MimeTypedResult","description":"org.jetbrains.kotlinx.jupyter.api.MIME","location":"api/org.jetbrains.kotlinx.jupyter.api/-m-i-m-e.html","searchKeys":["MIME","fun MIME(vararg mimeToData: Pair<String, String>): MimeTypedResult"]},{"name":"class MimeTypedResult(mimeData: Map<String, String>, isolatedHtml: Boolean, id: String?) : Map<String, String> , DisplayResult","description":"org.jetbrains.kotlinx.jupyter.api.MimeTypedResult","location":"api/org.jetbrains.kotlinx.jupyter.api/-mime-typed-result/index.html","searchKeys":["MimeTypedResult","class MimeTypedResult(mimeData: Map<String, String>, isolatedHtml: Boolean, id: String?) : Map<String, String> , DisplayResult"]},{"name":"fun MimeTypedResult(mimeData: Map<String, String>, isolatedHtml: Boolean = false, id: String? = null)","description":"org.jetbrains.kotlinx.jupyter.api.MimeTypedResult.MimeTypedResult","location":"api/org.jetbrains.kotlinx.jupyter.api/-mime-typed-result/-mime-typed-result.html","searchKeys":["MimeTypedResult","fun MimeTypedResult(mimeData: Map<String, String>, isolatedHtml: Boolean = false, id: String? = null)"]},{"name":"var isolatedHtml: Boolean = false","description":"org.jetbrains.kotlinx.jupyter.api.MimeTypedResult.isolatedHtml","location":"api/org.jetbrains.kotlinx.jupyter.api/-mime-typed-result/isolated-html.html","searchKeys":["isolatedHtml","var isolatedHtml: Boolean = false"]},{"name":"interface Notebook<CellT : CodeCell>","description":"org.jetbrains.kotlinx.jupyter.api.Notebook","location":"api/org.jetbrains.kotlinx.jupyter.api/-notebook/index.html","searchKeys":["Notebook","interface Notebook<CellT : CodeCell>"]},{"name":"abstract val cells: Map<Int, CellT>","description":"org.jetbrains.kotlinx.jupyter.api.Notebook.cells","location":"api/org.jetbrains.kotlinx.jupyter.api/-notebook/cells.html","searchKeys":["cells","abstract val cells: Map<Int, CellT>"]},{"name":"open val currentCell: CellT?","description":"org.jetbrains.kotlinx.jupyter.api.Notebook.currentCell","location":"api/org.jetbrains.kotlinx.jupyter.api/-notebook/current-cell.html","searchKeys":["currentCell","open val currentCell: CellT?"]},{"name":"abstract fun history(before: Int): CellT?","description":"org.jetbrains.kotlinx.jupyter.api.Notebook.history","location":"api/org.jetbrains.kotlinx.jupyter.api/-notebook/history.html","searchKeys":["history","abstract fun history(before: Int): CellT?"]},{"name":"abstract val jreInfo: JREInfoProvider","description":"org.jetbrains.kotlinx.jupyter.api.Notebook.jreInfo","location":"api/org.jetbrains.kotlinx.jupyter.api/-notebook/jre-info.html","searchKeys":["jreInfo","abstract val jreInfo: JREInfoProvider"]},{"name":"abstract val kernelVersion: KotlinKernelVersion","description":"org.jetbrains.kotlinx.jupyter.api.Notebook.kernelVersion","location":"api/org.jetbrains.kotlinx.jupyter.api/-notebook/kernel-version.html","searchKeys":["kernelVersion","abstract val kernelVersion: KotlinKernelVersion"]},{"name":"open val lastCell: CellT?","description":"org.jetbrains.kotlinx.jupyter.api.Notebook.lastCell","location":"api/org.jetbrains.kotlinx.jupyter.api/-notebook/last-cell.html","searchKeys":["lastCell","open val lastCell: CellT?"]},{"name":"abstract val results: ResultsAccessor","description":"org.jetbrains.kotlinx.jupyter.api.Notebook.results","location":"api/org.jetbrains.kotlinx.jupyter.api/-notebook/results.html","searchKeys":["results","abstract val results: ResultsAccessor"]},{"name":"interface PrecompiledRendererTypeHandler : RendererTypeHandler","description":"org.jetbrains.kotlinx.jupyter.api.PrecompiledRendererTypeHandler","location":"api/org.jetbrains.kotlinx.jupyter.api/-precompiled-renderer-type-handler/index.html","searchKeys":["PrecompiledRendererTypeHandler","interface PrecompiledRendererTypeHandler : RendererTypeHandler"]},{"name":"abstract val mayBePrecompiled: Boolean","description":"org.jetbrains.kotlinx.jupyter.api.PrecompiledRendererTypeHandler.mayBePrecompiled","location":"api/org.jetbrains.kotlinx.jupyter.api/-precompiled-renderer-type-handler/may-be-precompiled.html","searchKeys":["mayBePrecompiled","abstract val mayBePrecompiled: Boolean"]},{"name":"open override val mayBePrecompiled: Boolean","description":"org.jetbrains.kotlinx.jupyter.api.SubtypeRendererTypeHandler.mayBePrecompiled","location":"api/org.jetbrains.kotlinx.jupyter.api/-subtype-renderer-type-handler/may-be-precompiled.html","searchKeys":["mayBePrecompiled","open override val mayBePrecompiled: Boolean"]},{"name":"abstract fun precompile(methodName: String, paramName: String): Code?","description":"org.jetbrains.kotlinx.jupyter.api.PrecompiledRendererTypeHandler.precompile","location":"api/org.jetbrains.kotlinx.jupyter.api/-precompiled-renderer-type-handler/precompile.html","searchKeys":["precompile","abstract fun precompile(methodName: String, paramName: String): Code?"]},{"name":"open override fun precompile(methodName: String, paramName: String): Code?","description":"org.jetbrains.kotlinx.jupyter.api.SubtypeRendererTypeHandler.precompile","location":"api/org.jetbrains.kotlinx.jupyter.api/-subtype-renderer-type-handler/precompile.html","searchKeys":["precompile","open override fun precompile(methodName: String, paramName: String): Code?"]},{"name":"interface Renderable","description":"org.jetbrains.kotlinx.jupyter.api.Renderable","location":"api/org.jetbrains.kotlinx.jupyter.api/-renderable/index.html","searchKeys":["Renderable","interface Renderable"]},{"name":"interface RendererTypeHandler : VariablesSubstitutionAware<RendererTypeHandler> ","description":"org.jetbrains.kotlinx.jupyter.api.RendererTypeHandler","location":"api/org.jetbrains.kotlinx.jupyter.api/-renderer-type-handler/index.html","searchKeys":["RendererTypeHandler","interface RendererTypeHandler : VariablesSubstitutionAware<RendererTypeHandler> "]},{"name":"class ResultHandlerCodeExecution(code: Code) : ResultHandlerExecution","description":"org.jetbrains.kotlinx.jupyter.api.ResultHandlerCodeExecution","location":"api/org.jetbrains.kotlinx.jupyter.api/-result-handler-code-execution/index.html","searchKeys":["ResultHandlerCodeExecution","class ResultHandlerCodeExecution(code: Code) : ResultHandlerExecution"]},{"name":"fun ResultHandlerCodeExecution(code: Code)","description":"org.jetbrains.kotlinx.jupyter.api.ResultHandlerCodeExecution.ResultHandlerCodeExecution","location":"api/org.jetbrains.kotlinx.jupyter.api/-result-handler-code-execution/-result-handler-code-execution.html","searchKeys":["ResultHandlerCodeExecution","fun ResultHandlerCodeExecution(code: Code)"]},{"name":"fun fun interface ResultHandlerExecution : VariablesSubstitutionAware<ResultHandlerExecution> ","description":"org.jetbrains.kotlinx.jupyter.api.ResultHandlerExecution","location":"api/org.jetbrains.kotlinx.jupyter.api/-result-handler-execution/index.html","searchKeys":["ResultHandlerExecution","fun fun interface ResultHandlerExecution : VariablesSubstitutionAware<ResultHandlerExecution> "]},{"name":"fun fun interface ResultsAccessor","description":"org.jetbrains.kotlinx.jupyter.api.ResultsAccessor","location":"api/org.jetbrains.kotlinx.jupyter.api/-results-accessor/index.html","searchKeys":["ResultsAccessor","fun fun interface ResultsAccessor"]},{"name":"abstract operator fun get(i: Int): Any?","description":"org.jetbrains.kotlinx.jupyter.api.ResultsAccessor.get","location":"api/org.jetbrains.kotlinx.jupyter.api/-results-accessor/get.html","searchKeys":["get","abstract operator fun get(i: Int): Any?"]},{"name":"class SubtypeRendererTypeHandler(superType: KClass<*>, execution: ResultHandlerExecution) : PrecompiledRendererTypeHandler","description":"org.jetbrains.kotlinx.jupyter.api.SubtypeRendererTypeHandler","location":"api/org.jetbrains.kotlinx.jupyter.api/-subtype-renderer-type-handler/index.html","searchKeys":["SubtypeRendererTypeHandler","class SubtypeRendererTypeHandler(superType: KClass<*>, execution: ResultHandlerExecution) : PrecompiledRendererTypeHandler"]},{"name":"fun SubtypeRendererTypeHandler(superType: KClass<*>, execution: ResultHandlerExecution)","description":"org.jetbrains.kotlinx.jupyter.api.SubtypeRendererTypeHandler.SubtypeRendererTypeHandler","location":"api/org.jetbrains.kotlinx.jupyter.api/-subtype-renderer-type-handler/-subtype-renderer-type-handler.html","searchKeys":["SubtypeRendererTypeHandler","fun SubtypeRendererTypeHandler(superType: KClass<*>, execution: ResultHandlerExecution)"]},{"name":"fun htmlResult(text: String, isolated: Boolean = false): MimeTypedResult","description":"org.jetbrains.kotlinx.jupyter.api.htmlResult","location":"api/org.jetbrains.kotlinx.jupyter.api/html-result.html","searchKeys":["htmlResult","fun htmlResult(text: String, isolated: Boolean = false): MimeTypedResult"]},{"name":"class CodeExecution(code: Code) : Execution<Any?> ","description":"org.jetbrains.kotlinx.jupyter.api.libraries.CodeExecution","location":"api/org.jetbrains.kotlinx.jupyter.api.libraries/-code-execution/index.html","searchKeys":["CodeExecution","class CodeExecution(code: Code) : Execution<Any?> "]},{"name":"fun CodeExecution(code: Code)","description":"org.jetbrains.kotlinx.jupyter.api.libraries.CodeExecution.CodeExecution","location":"api/org.jetbrains.kotlinx.jupyter.api.libraries/-code-execution/-code-execution.html","searchKeys":["CodeExecution","fun CodeExecution(code: Code)"]},{"name":"class DelegatedExecution<T>(callback: KotlinKernelHost.() -> T) : Execution<T> ","description":"org.jetbrains.kotlinx.jupyter.api.libraries.DelegatedExecution","location":"api/org.jetbrains.kotlinx.jupyter.api.libraries/-delegated-execution/index.html","searchKeys":["DelegatedExecution","class DelegatedExecution<T>(callback: KotlinKernelHost.() -> T) : Execution<T> "]},{"name":"fun <T> DelegatedExecution(callback: KotlinKernelHost.() -> T)","description":"org.jetbrains.kotlinx.jupyter.api.libraries.DelegatedExecution.DelegatedExecution","location":"api/org.jetbrains.kotlinx.jupyter.api.libraries/-delegated-execution/-delegated-execution.html","searchKeys":["DelegatedExecution","fun <T> DelegatedExecution(callback: KotlinKernelHost.() -> T)"]},{"name":"fun fun interface Execution<T> : VariablesSubstitutionAware<Execution<T>> ","description":"org.jetbrains.kotlinx.jupyter.api.libraries.Execution","location":"api/org.jetbrains.kotlinx.jupyter.api.libraries/-execution/index.html","searchKeys":["Execution","fun fun interface Execution<T> : VariablesSubstitutionAware<Execution<T>> "]},{"name":"interface ExecutionHost","description":"org.jetbrains.kotlinx.jupyter.api.libraries.ExecutionHost","location":"api/org.jetbrains.kotlinx.jupyter.api.libraries/-execution-host/index.html","searchKeys":["ExecutionHost","interface ExecutionHost"]},{"name":"abstract class JupyterIntegration(register: JupyterIntegration.Builder.(Notebook<*>?) -> Unit) : LibraryDefinitionProducer","description":"org.jetbrains.kotlinx.jupyter.api.libraries.JupyterIntegration","location":"api/org.jetbrains.kotlinx.jupyter.api.libraries/-jupyter-integration/index.html","searchKeys":["JupyterIntegration","abstract class JupyterIntegration(register: JupyterIntegration.Builder.(Notebook<*>?) -> Unit) : LibraryDefinitionProducer"]},{"name":"fun JupyterIntegration(register: JupyterIntegration.Builder.(Notebook<*>?) -> Unit)","description":"org.jetbrains.kotlinx.jupyter.api.libraries.JupyterIntegration.JupyterIntegration","location":"api/org.jetbrains.kotlinx.jupyter.api.libraries/-jupyter-integration/-jupyter-integration.html","searchKeys":["JupyterIntegration","fun JupyterIntegration(register: JupyterIntegration.Builder.(Notebook<*>?) -> Unit)"]},{"name":"class Builder","description":"org.jetbrains.kotlinx.jupyter.api.libraries.JupyterIntegration.Builder","location":"api/org.jetbrains.kotlinx.jupyter.api.libraries/-jupyter-integration/-builder/index.html","searchKeys":["Builder","class Builder"]},{"name":"fun Builder()","description":"org.jetbrains.kotlinx.jupyter.api.libraries.JupyterIntegration.Builder.Builder","location":"api/org.jetbrains.kotlinx.jupyter.api.libraries/-jupyter-integration/-builder/-builder.html","searchKeys":["Builder","fun Builder()"]},{"name":"fun addAnnotationHandler(handler: AnnotationHandler)","description":"org.jetbrains.kotlinx.jupyter.api.libraries.JupyterIntegration.Builder.addAnnotationHandler","location":"api/org.jetbrains.kotlinx.jupyter.api.libraries/-jupyter-integration/-builder/add-annotation-handler.html","searchKeys":["addAnnotationHandler","fun addAnnotationHandler(handler: AnnotationHandler)"]},{"name":"fun addRenderer(handler: RendererTypeHandler)","description":"org.jetbrains.kotlinx.jupyter.api.libraries.JupyterIntegration.Builder.addRenderer","location":"api/org.jetbrains.kotlinx.jupyter.api.libraries/-jupyter-integration/-builder/add-renderer.html","searchKeys":["addRenderer","fun addRenderer(handler: RendererTypeHandler)"]},{"name":"fun addTypeConverter(handler: FieldHandler)","description":"org.jetbrains.kotlinx.jupyter.api.libraries.JupyterIntegration.Builder.addTypeConverter","location":"api/org.jetbrains.kotlinx.jupyter.api.libraries/-jupyter-integration/-builder/add-type-converter.html","searchKeys":["addTypeConverter","fun addTypeConverter(handler: FieldHandler)"]},{"name":"fun beforeCellExecution(callback: KotlinKernelHost.() -> Unit)","description":"org.jetbrains.kotlinx.jupyter.api.libraries.JupyterIntegration.Builder.beforeCellExecution","location":"api/org.jetbrains.kotlinx.jupyter.api.libraries/-jupyter-integration/-builder/before-cell-execution.html","searchKeys":["beforeCellExecution","fun beforeCellExecution(callback: KotlinKernelHost.() -> Unit)"]},{"name":"fun dependency(path: String)","description":"org.jetbrains.kotlinx.jupyter.api.libraries.JupyterIntegration.Builder.dependency","location":"api/org.jetbrains.kotlinx.jupyter.api.libraries/-jupyter-integration/-builder/dependency.html","searchKeys":["dependency","fun dependency(path: String)"]},{"name":"inline fun <T> importPackage()","description":"org.jetbrains.kotlinx.jupyter.api.libraries.JupyterIntegration.Builder.importPackage","location":"api/org.jetbrains.kotlinx.jupyter.api.libraries/-jupyter-integration/-builder/import-package.html","searchKeys":["importPackage","inline fun <T> importPackage()"]},{"name":"inline fun <T : Annotation> onClassAnnotation(noinline callback: ClassDeclarationsCallback)","description":"org.jetbrains.kotlinx.jupyter.api.libraries.JupyterIntegration.Builder.onClassAnnotation","location":"api/org.jetbrains.kotlinx.jupyter.api.libraries/-jupyter-integration/-builder/on-class-annotation.html","searchKeys":["onClassAnnotation","inline fun <T : Annotation> onClassAnnotation(noinline callback: ClassDeclarationsCallback)"]},{"name":"fun onLoaded(callback: KotlinKernelHost.() -> Unit)","description":"org.jetbrains.kotlinx.jupyter.api.libraries.JupyterIntegration.Builder.onLoaded","location":"api/org.jetbrains.kotlinx.jupyter.api.libraries/-jupyter-integration/-builder/on-loaded.html","searchKeys":["onLoaded","fun onLoaded(callback: KotlinKernelHost.() -> Unit)"]},{"name":"fun onShutdown(callback: KotlinKernelHost.() -> Unit)","description":"org.jetbrains.kotlinx.jupyter.api.libraries.JupyterIntegration.Builder.onShutdown","location":"api/org.jetbrains.kotlinx.jupyter.api.libraries/-jupyter-integration/-builder/on-shutdown.html","searchKeys":["onShutdown","fun onShutdown(callback: KotlinKernelHost.() -> Unit)"]},{"name":"inline fun <T : Any> onVariable(noinline callback: VariableDeclarationCallback<T>)","description":"org.jetbrains.kotlinx.jupyter.api.libraries.JupyterIntegration.Builder.onVariable","location":"api/org.jetbrains.kotlinx.jupyter.api.libraries/-jupyter-integration/-builder/on-variable.html","searchKeys":["onVariable","inline fun <T : Any> onVariable(noinline callback: VariableDeclarationCallback<T>)"]},{"name":"fun repository(path: String)","description":"org.jetbrains.kotlinx.jupyter.api.libraries.JupyterIntegration.Builder.repository","location":"api/org.jetbrains.kotlinx.jupyter.api.libraries/-jupyter-integration/-builder/repository.html","searchKeys":["repository","fun repository(path: String)"]},{"name":"fun resource(resource: LibraryResource)","description":"org.jetbrains.kotlinx.jupyter.api.libraries.JupyterIntegration.Builder.resource","location":"api/org.jetbrains.kotlinx.jupyter.api.libraries/-jupyter-integration/-builder/resource.html","searchKeys":["resource","fun resource(resource: LibraryResource)"]},{"name":"inline fun <T : Any> updateVariable(noinline callback: VariableUpdateCallback<T>)","description":"org.jetbrains.kotlinx.jupyter.api.libraries.JupyterIntegration.Builder.updateVariable","location":"api/org.jetbrains.kotlinx.jupyter.api.libraries/-jupyter-integration/-builder/update-variable.html","searchKeys":["updateVariable","inline fun <T : Any> updateVariable(noinline callback: VariableUpdateCallback<T>)"]},{"name":"open override fun getDefinitions(notebook: Notebook<*>?): List<LibraryDefinition>","description":"org.jetbrains.kotlinx.jupyter.api.libraries.JupyterIntegration.getDefinitions","location":"api/org.jetbrains.kotlinx.jupyter.api.libraries/-jupyter-integration/get-definitions.html","searchKeys":["getDefinitions","open override fun getDefinitions(notebook: Notebook<*>?): List<LibraryDefinition>"]},{"name":"abstract fun getDefinitions(notebook: Notebook<*>?): List<LibraryDefinition>","description":"org.jetbrains.kotlinx.jupyter.api.libraries.LibraryDefinitionProducer.getDefinitions","location":"api/org.jetbrains.kotlinx.jupyter.api.libraries/-library-definition-producer/get-definitions.html","searchKeys":["getDefinitions","abstract fun getDefinitions(notebook: Notebook<*>?): List<LibraryDefinition>"]},{"name":"const val KOTLIN_JUPYTER_LIBRARIES_FILE_NAME: String","description":"org.jetbrains.kotlinx.jupyter.api.libraries.KOTLIN_JUPYTER_LIBRARIES_FILE_NAME","location":"api/org.jetbrains.kotlinx.jupyter.api.libraries/-k-o-t-l-i-n_-j-u-p-y-t-e-r_-l-i-b-r-a-r-i-e-s_-f-i-l-e_-n-a-m-e.html","searchKeys":["KOTLIN_JUPYTER_LIBRARIES_FILE_NAME","const val KOTLIN_JUPYTER_LIBRARIES_FILE_NAME: String"]},{"name":"const val KOTLIN_JUPYTER_RESOURCES_PATH: String","description":"org.jetbrains.kotlinx.jupyter.api.libraries.KOTLIN_JUPYTER_RESOURCES_PATH","location":"api/org.jetbrains.kotlinx.jupyter.api.libraries/-k-o-t-l-i-n_-j-u-p-y-t-e-r_-r-e-s-o-u-r-c-e-s_-p-a-t-h.html","searchKeys":["KOTLIN_JUPYTER_RESOURCES_PATH","const val KOTLIN_JUPYTER_RESOURCES_PATH: String"]},{"name":"data class LibrariesDefinitionDeclaration(fqn: TypeName) : LibrariesInstantiable<LibraryDefinition> ","description":"org.jetbrains.kotlinx.jupyter.api.libraries.LibrariesDefinitionDeclaration","location":"api/org.jetbrains.kotlinx.jupyter.api.libraries/-libraries-definition-declaration/index.html","searchKeys":["LibrariesDefinitionDeclaration","data class LibrariesDefinitionDeclaration(fqn: TypeName) : LibrariesInstantiable<LibraryDefinition> "]},{"name":"fun LibrariesDefinitionDeclaration(fqn: TypeName)","description":"org.jetbrains.kotlinx.jupyter.api.libraries.LibrariesDefinitionDeclaration.LibrariesDefinitionDeclaration","location":"api/org.jetbrains.kotlinx.jupyter.api.libraries/-libraries-definition-declaration/-libraries-definition-declaration.html","searchKeys":["LibrariesDefinitionDeclaration","fun LibrariesDefinitionDeclaration(fqn: TypeName)"]},{"name":"open override val fqn: TypeName","description":"org.jetbrains.kotlinx.jupyter.api.libraries.LibrariesDefinitionDeclaration.fqn","location":"api/org.jetbrains.kotlinx.jupyter.api.libraries/-libraries-definition-declaration/fqn.html","searchKeys":["fqn","open override val fqn: TypeName"]},{"name":"abstract val fqn: TypeName","description":"org.jetbrains.kotlinx.jupyter.api.libraries.LibrariesInstantiable.fqn","location":"api/org.jetbrains.kotlinx.jupyter.api.libraries/-libraries-instantiable/fqn.html","searchKeys":["fqn","abstract val fqn: TypeName"]},{"name":"open override val fqn: TypeName","description":"org.jetbrains.kotlinx.jupyter.api.libraries.LibrariesProducerDeclaration.fqn","location":"api/org.jetbrains.kotlinx.jupyter.api.libraries/-libraries-producer-declaration/fqn.html","searchKeys":["fqn","open override val fqn: TypeName"]},{"name":"interface LibrariesInstantiable<T>","description":"org.jetbrains.kotlinx.jupyter.api.libraries.LibrariesInstantiable","location":"api/org.jetbrains.kotlinx.jupyter.api.libraries/-libraries-instantiable/index.html","searchKeys":["LibrariesInstantiable","interface LibrariesInstantiable<T>"]},{"name":"data class LibrariesProducerDeclaration(fqn: TypeName) : LibrariesInstantiable<LibraryDefinitionProducer> ","description":"org.jetbrains.kotlinx.jupyter.api.libraries.LibrariesProducerDeclaration","location":"api/org.jetbrains.kotlinx.jupyter.api.libraries/-libraries-producer-declaration/index.html","searchKeys":["LibrariesProducerDeclaration","data class LibrariesProducerDeclaration(fqn: TypeName) : LibrariesInstantiable<LibraryDefinitionProducer> "]},{"name":"fun LibrariesProducerDeclaration(fqn: TypeName)","description":"org.jetbrains.kotlinx.jupyter.api.libraries.LibrariesProducerDeclaration.LibrariesProducerDeclaration","location":"api/org.jetbrains.kotlinx.jupyter.api.libraries/-libraries-producer-declaration/-libraries-producer-declaration.html","searchKeys":["LibrariesProducerDeclaration","fun LibrariesProducerDeclaration(fqn: TypeName)"]},{"name":"data class LibrariesScanResult(definitions: List<LibrariesDefinitionDeclaration>, producers: List<LibrariesProducerDeclaration>)","description":"org.jetbrains.kotlinx.jupyter.api.libraries.LibrariesScanResult","location":"api/org.jetbrains.kotlinx.jupyter.api.libraries/-libraries-scan-result/index.html","searchKeys":["LibrariesScanResult","data class LibrariesScanResult(definitions: List<LibrariesDefinitionDeclaration>, producers: List<LibrariesProducerDeclaration>)"]},{"name":"fun LibrariesScanResult(definitions: List<LibrariesDefinitionDeclaration> = emptyList(), producers: List<LibrariesProducerDeclaration> = emptyList())","description":"org.jetbrains.kotlinx.jupyter.api.libraries.LibrariesScanResult.LibrariesScanResult","location":"api/org.jetbrains.kotlinx.jupyter.api.libraries/-libraries-scan-result/-libraries-scan-result.html","searchKeys":["LibrariesScanResult","fun LibrariesScanResult(definitions: List<LibrariesDefinitionDeclaration> = emptyList(), producers: List<LibrariesProducerDeclaration> = emptyList())"]},{"name":"val definitions: List<LibrariesDefinitionDeclaration>","description":"org.jetbrains.kotlinx.jupyter.api.libraries.LibrariesScanResult.definitions","location":"api/org.jetbrains.kotlinx.jupyter.api.libraries/-libraries-scan-result/definitions.html","searchKeys":["definitions","val definitions: List<LibrariesDefinitionDeclaration>"]},{"name":"val producers: List<LibrariesProducerDeclaration>","description":"org.jetbrains.kotlinx.jupyter.api.libraries.LibrariesScanResult.producers","location":"api/org.jetbrains.kotlinx.jupyter.api.libraries/-libraries-scan-result/producers.html","searchKeys":["producers","val producers: List<LibrariesProducerDeclaration>"]},{"name":"interface LibraryDefinition","description":"org.jetbrains.kotlinx.jupyter.api.libraries.LibraryDefinition","location":"api/org.jetbrains.kotlinx.jupyter.api.libraries/-library-definition/index.html","searchKeys":["LibraryDefinition","interface LibraryDefinition"]},{"name":"open val annotations: List<AnnotationHandler>","description":"org.jetbrains.kotlinx.jupyter.api.libraries.LibraryDefinition.annotations","location":"api/org.jetbrains.kotlinx.jupyter.api.libraries/-library-definition/annotations.html","searchKeys":["annotations","open val annotations: List<AnnotationHandler>"]},{"name":"open override val annotations: List<AnnotationHandler>","description":"org.jetbrains.kotlinx.jupyter.api.libraries.LibraryDefinitionImpl.annotations","location":"api/org.jetbrains.kotlinx.jupyter.api.libraries/-library-definition-impl/annotations.html","searchKeys":["annotations","open override val annotations: List<AnnotationHandler>"]},{"name":"open val converters: List<FieldHandler>","description":"org.jetbrains.kotlinx.jupyter.api.libraries.LibraryDefinition.converters","location":"api/org.jetbrains.kotlinx.jupyter.api.libraries/-library-definition/converters.html","searchKeys":["converters","open val converters: List<FieldHandler>"]},{"name":"open override val converters: List<FieldHandler>","description":"org.jetbrains.kotlinx.jupyter.api.libraries.LibraryDefinitionImpl.converters","location":"api/org.jetbrains.kotlinx.jupyter.api.libraries/-library-definition-impl/converters.html","searchKeys":["converters","open override val converters: List<FieldHandler>"]},{"name":"open val dependencies: List<String>","description":"org.jetbrains.kotlinx.jupyter.api.libraries.LibraryDefinition.dependencies","location":"api/org.jetbrains.kotlinx.jupyter.api.libraries/-library-definition/dependencies.html","searchKeys":["dependencies","open val dependencies: List<String>"]},{"name":"open override val dependencies: List<String>","description":"org.jetbrains.kotlinx.jupyter.api.libraries.LibraryDefinitionImpl.dependencies","location":"api/org.jetbrains.kotlinx.jupyter.api.libraries/-library-definition-impl/dependencies.html","searchKeys":["dependencies","open override val dependencies: List<String>"]},{"name":"open val imports: List<String>","description":"org.jetbrains.kotlinx.jupyter.api.libraries.LibraryDefinition.imports","location":"api/org.jetbrains.kotlinx.jupyter.api.libraries/-library-definition/imports.html","searchKeys":["imports","open val imports: List<String>"]},{"name":"open override val imports: List<String>","description":"org.jetbrains.kotlinx.jupyter.api.libraries.LibraryDefinitionImpl.imports","location":"api/org.jetbrains.kotlinx.jupyter.api.libraries/-library-definition-impl/imports.html","searchKeys":["imports","open override val imports: List<String>"]},{"name":"open val init: List<Execution<*>>","description":"org.jetbrains.kotlinx.jupyter.api.libraries.LibraryDefinition.init","location":"api/org.jetbrains.kotlinx.jupyter.api.libraries/-library-definition/init.html","searchKeys":["init","open val init: List<Execution<*>>"]},{"name":"open override val init: List<Execution<*>>","description":"org.jetbrains.kotlinx.jupyter.api.libraries.LibraryDefinitionImpl.init","location":"api/org.jetbrains.kotlinx.jupyter.api.libraries/-library-definition-impl/init.html","searchKeys":["init","open override val init: List<Execution<*>>"]},{"name":"open val initCell: List<Execution<*>>","description":"org.jetbrains.kotlinx.jupyter.api.libraries.LibraryDefinition.initCell","location":"api/org.jetbrains.kotlinx.jupyter.api.libraries/-library-definition/init-cell.html","searchKeys":["initCell","open val initCell: List<Execution<*>>"]},{"name":"open override val initCell: List<Execution<*>>","description":"org.jetbrains.kotlinx.jupyter.api.libraries.LibraryDefinitionImpl.initCell","location":"api/org.jetbrains.kotlinx.jupyter.api.libraries/-library-definition-impl/init-cell.html","searchKeys":["initCell","open override val initCell: List<Execution<*>>"]},{"name":"abstract val minKernelVersion: KotlinKernelVersion?","description":"org.jetbrains.kotlinx.jupyter.api.libraries.LibraryDefinition.minKernelVersion","location":"api/org.jetbrains.kotlinx.jupyter.api.libraries/-library-definition/min-kernel-version.html","searchKeys":["minKernelVersion","abstract val minKernelVersion: KotlinKernelVersion?"]},{"name":"open override val minKernelVersion: KotlinKernelVersion? = null","description":"org.jetbrains.kotlinx.jupyter.api.libraries.LibraryDefinitionImpl.minKernelVersion","location":"api/org.jetbrains.kotlinx.jupyter.api.libraries/-library-definition-impl/min-kernel-version.html","searchKeys":["minKernelVersion","open override val minKernelVersion: KotlinKernelVersion? = null"]},{"name":"open val renderers: List<RendererTypeHandler>","description":"org.jetbrains.kotlinx.jupyter.api.libraries.LibraryDefinition.renderers","location":"api/org.jetbrains.kotlinx.jupyter.api.libraries/-library-definition/renderers.html","searchKeys":["renderers","open val renderers: List<RendererTypeHandler>"]},{"name":"open override val renderers: List<RendererTypeHandler>","description":"org.jetbrains.kotlinx.jupyter.api.libraries.LibraryDefinitionImpl.renderers","location":"api/org.jetbrains.kotlinx.jupyter.api.libraries/-library-definition-impl/renderers.html","searchKeys":["renderers","open override val renderers: List<RendererTypeHandler>"]},{"name":"open val repositories: List<String>","description":"org.jetbrains.kotlinx.jupyter.api.libraries.LibraryDefinition.repositories","location":"api/org.jetbrains.kotlinx.jupyter.api.libraries/-library-definition/repositories.html","searchKeys":["repositories","open val repositories: List<String>"]},{"name":"open override val repositories: List<String>","description":"org.jetbrains.kotlinx.jupyter.api.libraries.LibraryDefinitionImpl.repositories","location":"api/org.jetbrains.kotlinx.jupyter.api.libraries/-library-definition-impl/repositories.html","searchKeys":["repositories","open override val repositories: List<String>"]},{"name":"open val resources: List<LibraryResource>","description":"org.jetbrains.kotlinx.jupyter.api.libraries.LibraryDefinition.resources","location":"api/org.jetbrains.kotlinx.jupyter.api.libraries/-library-definition/resources.html","searchKeys":["resources","open val resources: List<LibraryResource>"]},{"name":"open override val resources: List<LibraryResource>","description":"org.jetbrains.kotlinx.jupyter.api.libraries.LibraryDefinitionImpl.resources","location":"api/org.jetbrains.kotlinx.jupyter.api.libraries/-library-definition-impl/resources.html","searchKeys":["resources","open override val resources: List<LibraryResource>"]},{"name":"open val shutdown: List<Execution<*>>","description":"org.jetbrains.kotlinx.jupyter.api.libraries.LibraryDefinition.shutdown","location":"api/org.jetbrains.kotlinx.jupyter.api.libraries/-library-definition/shutdown.html","searchKeys":["shutdown","open val shutdown: List<Execution<*>>"]},{"name":"open override val shutdown: List<Execution<*>>","description":"org.jetbrains.kotlinx.jupyter.api.libraries.LibraryDefinitionImpl.shutdown","location":"api/org.jetbrains.kotlinx.jupyter.api.libraries/-library-definition-impl/shutdown.html","searchKeys":["shutdown","open override val shutdown: List<Execution<*>>"]},{"name":"class LibraryDefinitionImpl(dependencies: List<String>, repositories: List<String>, imports: List<String>, init: List<Execution<*>>, initCell: List<Execution<*>>, shutdown: List<Execution<*>>, renderers: List<RendererTypeHandler>, converters: List<FieldHandler>, annotations: List<AnnotationHandler>, resources: List<LibraryResource>, minKernelVersion: KotlinKernelVersion?) : LibraryDefinition","description":"org.jetbrains.kotlinx.jupyter.api.libraries.LibraryDefinitionImpl","location":"api/org.jetbrains.kotlinx.jupyter.api.libraries/-library-definition-impl/index.html","searchKeys":["LibraryDefinitionImpl","class LibraryDefinitionImpl(dependencies: List<String>, repositories: List<String>, imports: List<String>, init: List<Execution<*>>, initCell: List<Execution<*>>, shutdown: List<Execution<*>>, renderers: List<RendererTypeHandler>, converters: List<FieldHandler>, annotations: List<AnnotationHandler>, resources: List<LibraryResource>, minKernelVersion: KotlinKernelVersion?) : LibraryDefinition"]},{"name":"fun LibraryDefinitionImpl(dependencies: List<String> = emptyList(), repositories: List<String> = emptyList(), imports: List<String> = emptyList(), init: List<Execution<*>> = emptyList(), initCell: List<Execution<*>> = emptyList(), shutdown: List<Execution<*>> = emptyList(), renderers: List<RendererTypeHandler> = emptyList(), converters: List<FieldHandler> = emptyList(), annotations: List<AnnotationHandler> = emptyList(), resources: List<LibraryResource> = emptyList(), minKernelVersion: KotlinKernelVersion? = null)","description":"org.jetbrains.kotlinx.jupyter.api.libraries.LibraryDefinitionImpl.LibraryDefinitionImpl","location":"api/org.jetbrains.kotlinx.jupyter.api.libraries/-library-definition-impl/-library-definition-impl.html","searchKeys":["LibraryDefinitionImpl","fun LibraryDefinitionImpl(dependencies: List<String> = emptyList(), repositories: List<String> = emptyList(), imports: List<String> = emptyList(), init: List<Execution<*>> = emptyList(), initCell: List<Execution<*>> = emptyList(), shutdown: List<Execution<*>> = emptyList(), renderers: List<RendererTypeHandler> = emptyList(), converters: List<FieldHandler> = emptyList(), annotations: List<AnnotationHandler> = emptyList(), resources: List<LibraryResource> = emptyList(), minKernelVersion: KotlinKernelVersion? = null)"]},{"name":"interface LibraryDefinitionProducer","description":"org.jetbrains.kotlinx.jupyter.api.libraries.LibraryDefinitionProducer","location":"api/org.jetbrains.kotlinx.jupyter.api.libraries/-library-definition-producer/index.html","searchKeys":["LibraryDefinitionProducer","interface LibraryDefinitionProducer"]},{"name":"data class LibraryResource(bundles: List<ResourceFallbacksBundle>, type: ResourceType, name: String) : VariablesSubstitutionAware<LibraryResource> ","description":"org.jetbrains.kotlinx.jupyter.api.libraries.LibraryResource","location":"api/org.jetbrains.kotlinx.jupyter.api.libraries/-library-resource/index.html","searchKeys":["LibraryResource","data class LibraryResource(bundles: List<ResourceFallbacksBundle>, type: ResourceType, name: String) : VariablesSubstitutionAware<LibraryResource> "]},{"name":"fun LibraryResource(bundles: List<ResourceFallbacksBundle>, type: ResourceType, name: String)","description":"org.jetbrains.kotlinx.jupyter.api.libraries.LibraryResource.LibraryResource","location":"api/org.jetbrains.kotlinx.jupyter.api.libraries/-library-resource/-library-resource.html","searchKeys":["LibraryResource","fun LibraryResource(bundles: List<ResourceFallbacksBundle>, type: ResourceType, name: String)"]},{"name":"val bundles: List<ResourceFallbacksBundle>","description":"org.jetbrains.kotlinx.jupyter.api.libraries.LibraryResource.bundles","location":"api/org.jetbrains.kotlinx.jupyter.api.libraries/-library-resource/bundles.html","searchKeys":["bundles","val bundles: List<ResourceFallbacksBundle>"]},{"name":"operator fun component3(): String","description":"org.jetbrains.kotlinx.jupyter.api.libraries.LibraryResource.component3","location":"api/org.jetbrains.kotlinx.jupyter.api.libraries/-library-resource/component3.html","searchKeys":["component3","operator fun component3(): String"]},{"name":"val type: ResourceType","description":"org.jetbrains.kotlinx.jupyter.api.libraries.LibraryResource.type","location":"api/org.jetbrains.kotlinx.jupyter.api.libraries/-library-resource/type.html","searchKeys":["type","val type: ResourceType"]},{"name":"val type: ResourcePathType","description":"org.jetbrains.kotlinx.jupyter.api.libraries.ResourceLocation.type","location":"api/org.jetbrains.kotlinx.jupyter.api.libraries/-resource-location/type.html","searchKeys":["type","val type: ResourcePathType"]},{"name":"data class ResourceFallbacksBundle(locations: List<ResourceLocation>) : VariablesSubstitutionAware<ResourceFallbacksBundle> ","description":"org.jetbrains.kotlinx.jupyter.api.libraries.ResourceFallbacksBundle","location":"api/org.jetbrains.kotlinx.jupyter.api.libraries/-resource-fallbacks-bundle/index.html","searchKeys":["ResourceFallbacksBundle","data class ResourceFallbacksBundle(locations: List<ResourceLocation>) : VariablesSubstitutionAware<ResourceFallbacksBundle> "]},{"name":"val locations: List<ResourceLocation>","description":"org.jetbrains.kotlinx.jupyter.api.libraries.ResourceFallbacksBundle.locations","location":"api/org.jetbrains.kotlinx.jupyter.api.libraries/-resource-fallbacks-bundle/locations.html","searchKeys":["locations","val locations: List<ResourceLocation>"]},{"name":"data class ResourceLocation(path: String, type: ResourcePathType) : VariablesSubstitutionAware<ResourceLocation> ","description":"org.jetbrains.kotlinx.jupyter.api.libraries.ResourceLocation","location":"api/org.jetbrains.kotlinx.jupyter.api.libraries/-resource-location/index.html","searchKeys":["ResourceLocation","data class ResourceLocation(path: String, type: ResourcePathType) : VariablesSubstitutionAware<ResourceLocation> "]},{"name":"fun ResourceLocation(path: String, type: ResourcePathType)","description":"org.jetbrains.kotlinx.jupyter.api.libraries.ResourceLocation.ResourceLocation","location":"api/org.jetbrains.kotlinx.jupyter.api.libraries/-resource-location/-resource-location.html","searchKeys":["ResourceLocation","fun ResourceLocation(path: String, type: ResourcePathType)"]},{"name":"val path: String","description":"org.jetbrains.kotlinx.jupyter.api.libraries.ResourceLocation.path","location":"api/org.jetbrains.kotlinx.jupyter.api.libraries/-resource-location/path.html","searchKeys":["path","val path: String"]},{"name":"enum ResourcePathType : Enum<ResourcePathType> ","description":"org.jetbrains.kotlinx.jupyter.api.libraries.ResourcePathType","location":"api/org.jetbrains.kotlinx.jupyter.api.libraries/-resource-path-type/index.html","searchKeys":["ResourcePathType","enum ResourcePathType : Enum<ResourcePathType> "]},{"name":"CLASSPATH_PATH()","description":"org.jetbrains.kotlinx.jupyter.api.libraries.ResourcePathType.CLASSPATH_PATH","location":"api/org.jetbrains.kotlinx.jupyter.api.libraries/-resource-path-type/-c-l-a-s-s-p-a-t-h_-p-a-t-h/index.html","searchKeys":["CLASSPATH_PATH","CLASSPATH_PATH()"]},{"name":"val ordinal: Int","description":"org.jetbrains.kotlinx.jupyter.api.libraries.ResourcePathType.CLASSPATH_PATH.ordinal","location":"api/org.jetbrains.kotlinx.jupyter.api.libraries/-resource-path-type/-c-l-a-s-s-p-a-t-h_-p-a-t-h/ordinal.html","searchKeys":["ordinal","val ordinal: Int"]},{"name":"val ordinal: Int","description":"org.jetbrains.kotlinx.jupyter.api.libraries.ResourcePathType.LOCAL_PATH.ordinal","location":"api/org.jetbrains.kotlinx.jupyter.api.libraries/-resource-path-type/-l-o-c-a-l_-p-a-t-h/ordinal.html","searchKeys":["ordinal","val ordinal: Int"]},{"name":"val ordinal: Int","description":"org.jetbrains.kotlinx.jupyter.api.libraries.ResourcePathType.URL.ordinal","location":"api/org.jetbrains.kotlinx.jupyter.api.libraries/-resource-path-type/-u-r-l/ordinal.html","searchKeys":["ordinal","val ordinal: Int"]},{"name":"val ordinal: Int","description":"org.jetbrains.kotlinx.jupyter.api.libraries.ResourcePathType.URL_EMBEDDED.ordinal","location":"api/org.jetbrains.kotlinx.jupyter.api.libraries/-resource-path-type/-u-r-l_-e-m-b-e-d-d-e-d/ordinal.html","searchKeys":["ordinal","val ordinal: Int"]},{"name":"val ordinal: Int","description":"org.jetbrains.kotlinx.jupyter.api.libraries.ResourceType.CSS.ordinal","location":"api/org.jetbrains.kotlinx.jupyter.api.libraries/-resource-type/-c-s-s/ordinal.html","searchKeys":["ordinal","val ordinal: Int"]},{"name":"val ordinal: Int","description":"org.jetbrains.kotlinx.jupyter.api.libraries.ResourceType.JS.ordinal","location":"api/org.jetbrains.kotlinx.jupyter.api.libraries/-resource-type/-j-s/ordinal.html","searchKeys":["ordinal","val ordinal: Int"]},{"name":"LOCAL_PATH()","description":"org.jetbrains.kotlinx.jupyter.api.libraries.ResourcePathType.LOCAL_PATH","location":"api/org.jetbrains.kotlinx.jupyter.api.libraries/-resource-path-type/-l-o-c-a-l_-p-a-t-h/index.html","searchKeys":["LOCAL_PATH","LOCAL_PATH()"]},{"name":"URL()","description":"org.jetbrains.kotlinx.jupyter.api.libraries.ResourcePathType.URL","location":"api/org.jetbrains.kotlinx.jupyter.api.libraries/-resource-path-type/-u-r-l/index.html","searchKeys":["URL","URL()"]},{"name":"URL_EMBEDDED()","description":"org.jetbrains.kotlinx.jupyter.api.libraries.ResourcePathType.URL_EMBEDDED","location":"api/org.jetbrains.kotlinx.jupyter.api.libraries/-resource-path-type/-u-r-l_-e-m-b-e-d-d-e-d/index.html","searchKeys":["URL_EMBEDDED","URL_EMBEDDED()"]},{"name":"enum ResourceType : Enum<ResourceType> ","description":"org.jetbrains.kotlinx.jupyter.api.libraries.ResourceType","location":"api/org.jetbrains.kotlinx.jupyter.api.libraries/-resource-type/index.html","searchKeys":["ResourceType","enum ResourceType : Enum<ResourceType> "]},{"name":"CSS()","description":"org.jetbrains.kotlinx.jupyter.api.libraries.ResourceType.CSS","location":"api/org.jetbrains.kotlinx.jupyter.api.libraries/-resource-type/-c-s-s/index.html","searchKeys":["CSS","CSS()"]},{"name":"JS()","description":"org.jetbrains.kotlinx.jupyter.api.libraries.ResourceType.JS","location":"api/org.jetbrains.kotlinx.jupyter.api.libraries/-resource-type/-j-s/index.html","searchKeys":["JS","JS()"]},{"name":"interface VariablesSubstitutionAware<out T>","description":"org.jetbrains.kotlinx.jupyter.api.libraries.VariablesSubstitutionAware","location":"api/org.jetbrains.kotlinx.jupyter.api.libraries/-variables-substitution-aware/index.html","searchKeys":["VariablesSubstitutionAware","interface VariablesSubstitutionAware<out T>"]},{"name":"fun mimeResult(vararg mimeToData: Pair<String, String>): MimeTypedResult","description":"org.jetbrains.kotlinx.jupyter.api.mimeResult","location":"api/org.jetbrains.kotlinx.jupyter.api/mime-result.html","searchKeys":["mimeResult","fun mimeResult(vararg mimeToData: Pair<String, String>): MimeTypedResult"]},{"name":"fun MutableJsonObject.setDisplayId(id: String? = null, force: Boolean = false): String?","description":"org.jetbrains.kotlinx.jupyter.api.setDisplayId","location":"api/org.jetbrains.kotlinx.jupyter.api/set-display-id.html","searchKeys":["setDisplayId","fun MutableJsonObject.setDisplayId(id: String? = null, force: Boolean = false): String?"]},{"name":"fun textResult(text: String): MimeTypedResult","description":"org.jetbrains.kotlinx.jupyter.api.textResult","location":"api/org.jetbrains.kotlinx.jupyter.api/text-result.html","searchKeys":["textResult","fun textResult(text: String): MimeTypedResult"]},{"name":"object CodeExecutionSerializer : PrimitiveStringPropertySerializer<CodeExecution> ","description":"org.jetbrains.kotlinx.jupyter.util.CodeExecutionSerializer","location":"api/org.jetbrains.kotlinx.jupyter.util/-code-execution-serializer/index.html","searchKeys":["CodeExecutionSerializer","object CodeExecutionSerializer : PrimitiveStringPropertySerializer<CodeExecution> "]},{"name":"object KotlinKernelVersionSerializer : KSerializer<KotlinKernelVersion> ","description":"org.jetbrains.kotlinx.jupyter.util.KotlinKernelVersionSerializer","location":"api/org.jetbrains.kotlinx.jupyter.util/-kotlin-kernel-version-serializer/index.html","searchKeys":["KotlinKernelVersionSerializer","object KotlinKernelVersionSerializer : KSerializer<KotlinKernelVersion> "]},{"name":"open override val descriptor: SerialDescriptor","description":"org.jetbrains.kotlinx.jupyter.util.KotlinKernelVersionSerializer.descriptor","location":"api/org.jetbrains.kotlinx.jupyter.util/-kotlin-kernel-version-serializer/descriptor.html","searchKeys":["descriptor","open override val descriptor: SerialDescriptor"]},{"name":"open override val descriptor: SerialDescriptor","description":"org.jetbrains.kotlinx.jupyter.util.ListToMapSerializer.descriptor","location":"api/org.jetbrains.kotlinx.jupyter.util/-list-to-map-serializer/descriptor.html","searchKeys":["descriptor","open override val descriptor: SerialDescriptor"]},{"name":"open override val descriptor: SerialDescriptor","description":"org.jetbrains.kotlinx.jupyter.util.PrimitiveStringPropertySerializer.descriptor","location":"api/org.jetbrains.kotlinx.jupyter.util/-primitive-string-property-serializer/descriptor.html","searchKeys":["descriptor","open override val descriptor: SerialDescriptor"]},{"name":"open override val descriptor: SerialDescriptor","description":"org.jetbrains.kotlinx.jupyter.util.ResourceBunchSerializer.descriptor","location":"api/org.jetbrains.kotlinx.jupyter.util/-resource-bunch-serializer/descriptor.html","searchKeys":["descriptor","open override val descriptor: SerialDescriptor"]},{"name":"open override fun deserialize(decoder: Decoder): KotlinKernelVersion","description":"org.jetbrains.kotlinx.jupyter.util.KotlinKernelVersionSerializer.deserialize","location":"api/org.jetbrains.kotlinx.jupyter.util/-kotlin-kernel-version-serializer/deserialize.html","searchKeys":["deserialize","open override fun deserialize(decoder: Decoder): KotlinKernelVersion"]},{"name":"open override fun deserialize(decoder: Decoder): List<T>","description":"org.jetbrains.kotlinx.jupyter.util.ListToMapSerializer.deserialize","location":"api/org.jetbrains.kotlinx.jupyter.util/-list-to-map-serializer/deserialize.html","searchKeys":["deserialize","open override fun deserialize(decoder: Decoder): List<T>"]},{"name":"open override fun deserialize(decoder: Decoder): T","description":"org.jetbrains.kotlinx.jupyter.util.PrimitiveStringPropertySerializer.deserialize","location":"api/org.jetbrains.kotlinx.jupyter.util/-primitive-string-property-serializer/deserialize.html","searchKeys":["deserialize","open override fun deserialize(decoder: Decoder): T"]},{"name":"open override fun deserialize(decoder: Decoder): ResourceFallbacksBundle","description":"org.jetbrains.kotlinx.jupyter.util.ResourceBunchSerializer.deserialize","location":"api/org.jetbrains.kotlinx.jupyter.util/-resource-bunch-serializer/deserialize.html","searchKeys":["deserialize","open override fun deserialize(decoder: Decoder): ResourceFallbacksBundle"]},{"name":"open override fun serialize(encoder: Encoder, value: KotlinKernelVersion)","description":"org.jetbrains.kotlinx.jupyter.util.KotlinKernelVersionSerializer.serialize","location":"api/org.jetbrains.kotlinx.jupyter.util/-kotlin-kernel-version-serializer/serialize.html","searchKeys":["serialize","open override fun serialize(encoder: Encoder, value: KotlinKernelVersion)"]},{"name":"open override fun serialize(encoder: Encoder, value: List<T>)","description":"org.jetbrains.kotlinx.jupyter.util.ListToMapSerializer.serialize","location":"api/org.jetbrains.kotlinx.jupyter.util/-list-to-map-serializer/serialize.html","searchKeys":["serialize","open override fun serialize(encoder: Encoder, value: List<T>)"]},{"name":"open override fun serialize(encoder: Encoder, value: T)","description":"org.jetbrains.kotlinx.jupyter.util.PrimitiveStringPropertySerializer.serialize","location":"api/org.jetbrains.kotlinx.jupyter.util/-primitive-string-property-serializer/serialize.html","searchKeys":["serialize","open override fun serialize(encoder: Encoder, value: T)"]},{"name":"open override fun serialize(encoder: Encoder, value: ResourceFallbacksBundle)","description":"org.jetbrains.kotlinx.jupyter.util.ResourceBunchSerializer.serialize","location":"api/org.jetbrains.kotlinx.jupyter.util/-resource-bunch-serializer/serialize.html","searchKeys":["serialize","open override fun serialize(encoder: Encoder, value: ResourceFallbacksBundle)"]},{"name":"abstract class ListToMapSerializer<T, K, V>(utilSerializer: KSerializer<Map<K, V>>, mapper: (K, V) -> T, reverseMapper: (T) -> Pair<K, V>) : KSerializer<List<T>> ","description":"org.jetbrains.kotlinx.jupyter.util.ListToMapSerializer","location":"api/org.jetbrains.kotlinx.jupyter.util/-list-to-map-serializer/index.html","searchKeys":["ListToMapSerializer","abstract class ListToMapSerializer<T, K, V>(utilSerializer: KSerializer<Map<K, V>>, mapper: (K, V) -> T, reverseMapper: (T) -> Pair<K, V>) : KSerializer<List<T>> "]},{"name":"fun <T, K, V> ListToMapSerializer(utilSerializer: KSerializer<Map<K, V>>, mapper: (K, V) -> T, reverseMapper: (T) -> Pair<K, V>)","description":"org.jetbrains.kotlinx.jupyter.util.ListToMapSerializer.ListToMapSerializer","location":"api/org.jetbrains.kotlinx.jupyter.util/-list-to-map-serializer/-list-to-map-serializer.html","searchKeys":["ListToMapSerializer","fun <T, K, V> ListToMapSerializer(utilSerializer: KSerializer<Map<K, V>>, mapper: (K, V) -> T, reverseMapper: (T) -> Pair<K, V>)"]},{"name":"abstract class PrimitiveStringPropertySerializer<T : Any>(kClass: KClass<T>, prop: KProperty1<T, String>, ctr: (String) -> T) : KSerializer<T> ","description":"org.jetbrains.kotlinx.jupyter.util.PrimitiveStringPropertySerializer","location":"api/org.jetbrains.kotlinx.jupyter.util/-primitive-string-property-serializer/index.html","searchKeys":["PrimitiveStringPropertySerializer","abstract class PrimitiveStringPropertySerializer<T : Any>(kClass: KClass<T>, prop: KProperty1<T, String>, ctr: (String) -> T) : KSerializer<T> "]},{"name":"fun <T : Any> PrimitiveStringPropertySerializer(kClass: KClass<T>, prop: KProperty1<T, String>, ctr: (String) -> T)","description":"org.jetbrains.kotlinx.jupyter.util.PrimitiveStringPropertySerializer.PrimitiveStringPropertySerializer","location":"api/org.jetbrains.kotlinx.jupyter.util/-primitive-string-property-serializer/-primitive-string-property-serializer.html","searchKeys":["PrimitiveStringPropertySerializer","fun <T : Any> PrimitiveStringPropertySerializer(kClass: KClass<T>, prop: KProperty1<T, String>, ctr: (String) -> T)"]},{"name":"object RenderersSerializer : ListToMapSerializer<ExactRendererTypeHandler, String, ResultHandlerCodeExecution> ","description":"org.jetbrains.kotlinx.jupyter.util.RenderersSerializer","location":"api/org.jetbrains.kotlinx.jupyter.util/-renderers-serializer/index.html","searchKeys":["RenderersSerializer","object RenderersSerializer : ListToMapSerializer<ExactRendererTypeHandler, String, ResultHandlerCodeExecution> "]},{"name":"object ResourceBunchSerializer : KSerializer<ResourceFallbacksBundle> ","description":"org.jetbrains.kotlinx.jupyter.util.ResourceBunchSerializer","location":"api/org.jetbrains.kotlinx.jupyter.util/-resource-bunch-serializer/index.html","searchKeys":["ResourceBunchSerializer","object ResourceBunchSerializer : KSerializer<ResourceFallbacksBundle> "]},{"name":"object TypeHandlerCodeExecutionSerializer : PrimitiveStringPropertySerializer<ResultHandlerCodeExecution> ","description":"org.jetbrains.kotlinx.jupyter.util.TypeHandlerCodeExecutionSerializer","location":"api/org.jetbrains.kotlinx.jupyter.util/-type-handler-code-execution-serializer/index.html","searchKeys":["TypeHandlerCodeExecutionSerializer","object TypeHandlerCodeExecutionSerializer : PrimitiveStringPropertySerializer<ResultHandlerCodeExecution> "]}]
