var pages = [{"name":"annotation class CompilerArgs(values: String)","description":"jupyter.kotlin.CompilerArgs","location":"lib/jupyter.kotlin/-compiler-args/index.html","searchKeys":["CompilerArgs","annotation class CompilerArgs(values: String)"]},{"name":"fun CompilerArgs(vararg values: String)","description":"jupyter.kotlin.CompilerArgs.CompilerArgs","location":"lib/jupyter.kotlin/-compiler-args/-compiler-args.html","searchKeys":["CompilerArgs","fun CompilerArgs(vararg values: String)"]},{"name":"val values: Array<out String>","description":"jupyter.kotlin.CompilerArgs.values","location":"lib/jupyter.kotlin/-compiler-args/values.html","searchKeys":["values","val values: Array<out String>"]},{"name":"annotation class DependsOn(value: String)","description":"jupyter.kotlin.DependsOn","location":"lib/jupyter.kotlin/-depends-on/index.html","searchKeys":["DependsOn","annotation class DependsOn(value: String)"]},{"name":"fun DependsOn(value: String = \"\")","description":"jupyter.kotlin.DependsOn.DependsOn","location":"lib/jupyter.kotlin/-depends-on/-depends-on.html","searchKeys":["DependsOn","fun DependsOn(value: String = \"\")"]},{"name":"val value: String","description":"jupyter.kotlin.DependsOn.value","location":"lib/jupyter.kotlin/-depends-on/value.html","searchKeys":["value","val value: String"]},{"name":"val value: Any?","description":"jupyter.kotlin.KotlinVariableInfo.value","location":"lib/jupyter.kotlin/-kotlin-variable-info/value.html","searchKeys":["value","val value: Any?"]},{"name":"val value: String","description":"jupyter.kotlin.Repository.value","location":"lib/jupyter.kotlin/-repository/value.html","searchKeys":["value","val value: String"]},{"name":"val value: Int","description":"jupyter.kotlin.receivers.ConstReceiver.value","location":"lib/jupyter.kotlin.receivers/-const-receiver/value.html","searchKeys":["value","val value: Int"]},{"name":"object JavaRuntime : JREInfoProvider","description":"jupyter.kotlin.JavaRuntime","location":"lib/jupyter.kotlin/-java-runtime/index.html","searchKeys":["JavaRuntime","object JavaRuntime : JREInfoProvider"]},{"name":"open override fun assertVersion(message: String, condition: (Int) -> Boolean)","description":"jupyter.kotlin.JavaRuntime.assertVersion","location":"lib/jupyter.kotlin/-java-runtime/assert-version.html","searchKeys":["assertVersion","open override fun assertVersion(message: String, condition: (Int) -> Boolean)"]},{"name":"open override fun assertVersionAtLeast(minVersion: Int)","description":"jupyter.kotlin.JavaRuntime.assertVersionAtLeast","location":"lib/jupyter.kotlin/-java-runtime/assert-version-at-least.html","searchKeys":["assertVersionAtLeast","open override fun assertVersionAtLeast(minVersion: Int)"]},{"name":"open override fun assertVersionInRange(minVersion: Int, maxVersion: Int)","description":"jupyter.kotlin.JavaRuntime.assertVersionInRange","location":"lib/jupyter.kotlin/-java-runtime/assert-version-in-range.html","searchKeys":["assertVersionInRange","open override fun assertVersionInRange(minVersion: Int, maxVersion: Int)"]},{"name":"open override val version: String","description":"jupyter.kotlin.JavaRuntime.version","location":"lib/jupyter.kotlin/-java-runtime/version.html","searchKeys":["version","open override val version: String"]},{"name":"open override val versionAsInt: Int","description":"jupyter.kotlin.JavaRuntime.versionAsInt","location":"lib/jupyter.kotlin/-java-runtime/version-as-int.html","searchKeys":["versionAsInt","open override val versionAsInt: Int"]},{"name":"class KotlinContext(vars: HashMap<String, KotlinVariableInfo>, functions: HashMap<String, KotlinFunctionInfo>)","description":"jupyter.kotlin.KotlinContext","location":"lib/jupyter.kotlin/-kotlin-context/index.html","searchKeys":["KotlinContext","class KotlinContext(vars: HashMap<String, KotlinVariableInfo>, functions: HashMap<String, KotlinFunctionInfo>)"]},{"name":"fun KotlinContext(vars: HashMap<String, KotlinVariableInfo> = HashMap(), functions: HashMap<String, KotlinFunctionInfo> = HashMap())","description":"jupyter.kotlin.KotlinContext.KotlinContext","location":"lib/jupyter.kotlin/-kotlin-context/-kotlin-context.html","searchKeys":["KotlinContext","fun KotlinContext(vars: HashMap<String, KotlinVariableInfo> = HashMap(), functions: HashMap<String, KotlinFunctionInfo> = HashMap())"]},{"name":"val functions: HashMap<String, KotlinFunctionInfo>","description":"jupyter.kotlin.KotlinContext.functions","location":"lib/jupyter.kotlin/-kotlin-context/functions.html","searchKeys":["functions","val functions: HashMap<String, KotlinFunctionInfo>"]},{"name":"val vars: HashMap<String, KotlinVariableInfo>","description":"jupyter.kotlin.KotlinContext.vars","location":"lib/jupyter.kotlin/-kotlin-context/vars.html","searchKeys":["vars","val vars: HashMap<String, KotlinVariableInfo>"]},{"name":"class KotlinFunctionInfo(function: KFunction<*>, line: Any) : Comparable<KotlinFunctionInfo> ","description":"jupyter.kotlin.KotlinFunctionInfo","location":"lib/jupyter.kotlin/-kotlin-function-info/index.html","searchKeys":["KotlinFunctionInfo","class KotlinFunctionInfo(function: KFunction<*>, line: Any) : Comparable<KotlinFunctionInfo> "]},{"name":"fun KotlinFunctionInfo(function: KFunction<*>, line: Any)","description":"jupyter.kotlin.KotlinFunctionInfo.KotlinFunctionInfo","location":"lib/jupyter.kotlin/-kotlin-function-info/-kotlin-function-info.html","searchKeys":["KotlinFunctionInfo","fun KotlinFunctionInfo(function: KFunction<*>, line: Any)"]},{"name":"open operator override fun compareTo(other: KotlinFunctionInfo): Int","description":"jupyter.kotlin.KotlinFunctionInfo.compareTo","location":"lib/jupyter.kotlin/-kotlin-function-info/compare-to.html","searchKeys":["compareTo","open operator override fun compareTo(other: KotlinFunctionInfo): Int"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"jupyter.kotlin.KotlinFunctionInfo.equals","location":"lib/jupyter.kotlin/-kotlin-function-info/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean"]},{"name":"val function: KFunction<*>","description":"jupyter.kotlin.KotlinFunctionInfo.function","location":"lib/jupyter.kotlin/-kotlin-function-info/function.html","searchKeys":["function","val function: KFunction<*>"]},{"name":"open override fun hashCode(): Int","description":"jupyter.kotlin.KotlinFunctionInfo.hashCode","location":"lib/jupyter.kotlin/-kotlin-function-info/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int"]},{"name":"val line: Any","description":"jupyter.kotlin.KotlinFunctionInfo.line","location":"lib/jupyter.kotlin/-kotlin-function-info/line.html","searchKeys":["line","val line: Any"]},{"name":"val line: Any","description":"jupyter.kotlin.KotlinVariableInfo.line","location":"lib/jupyter.kotlin/-kotlin-variable-info/line.html","searchKeys":["line","val line: Any"]},{"name":"val name: String","description":"jupyter.kotlin.KotlinFunctionInfo.name","location":"lib/jupyter.kotlin/-kotlin-function-info/name.html","searchKeys":["name","val name: String"]},{"name":"val name: String","description":"jupyter.kotlin.KotlinVariableInfo.name","location":"lib/jupyter.kotlin/-kotlin-variable-info/name.html","searchKeys":["name","val name: String"]},{"name":"val name: String","description":"jupyter.kotlin.Modificator.AddColumn.name","location":"lib/jupyter.kotlin/-modificator/-add-column/name.html","searchKeys":["name","val name: String"]},{"name":"val name: String","description":"jupyter.kotlin.Modificator.RemoveColumn.name","location":"lib/jupyter.kotlin/-modificator/-remove-column/name.html","searchKeys":["name","val name: String"]},{"name":"interface KotlinKernelHostProvider","description":"jupyter.kotlin.KotlinKernelHostProvider","location":"lib/jupyter.kotlin/-kotlin-kernel-host-provider/index.html","searchKeys":["KotlinKernelHostProvider","interface KotlinKernelHostProvider"]},{"name":"abstract val host: KotlinKernelHost?","description":"jupyter.kotlin.KotlinKernelHostProvider.host","location":"lib/jupyter.kotlin/-kotlin-kernel-host-provider/host.html","searchKeys":["host","abstract val host: KotlinKernelHost?"]},{"name":"class KotlinVariableInfo(value: Any?, descriptor: KProperty<*>, line: Any)","description":"jupyter.kotlin.KotlinVariableInfo","location":"lib/jupyter.kotlin/-kotlin-variable-info/index.html","searchKeys":["KotlinVariableInfo","class KotlinVariableInfo(value: Any?, descriptor: KProperty<*>, line: Any)"]},{"name":"fun KotlinVariableInfo(value: Any?, descriptor: KProperty<*>, line: Any)","description":"jupyter.kotlin.KotlinVariableInfo.KotlinVariableInfo","location":"lib/jupyter.kotlin/-kotlin-variable-info/-kotlin-variable-info.html","searchKeys":["KotlinVariableInfo","fun KotlinVariableInfo(value: Any?, descriptor: KProperty<*>, line: Any)"]},{"name":"val descriptor: KProperty<*>","description":"jupyter.kotlin.KotlinVariableInfo.descriptor","location":"lib/jupyter.kotlin/-kotlin-variable-info/descriptor.html","searchKeys":["descriptor","val descriptor: KProperty<*>"]},{"name":"val type: String","description":"jupyter.kotlin.KotlinVariableInfo.type","location":"lib/jupyter.kotlin/-kotlin-variable-info/type.html","searchKeys":["type","val type: String"]},{"name":"sealed class Modificator","description":"jupyter.kotlin.Modificator","location":"lib/jupyter.kotlin/-modificator/index.html","searchKeys":["Modificator","sealed class Modificator"]},{"name":"data class AddColumn<T, R>(name: String, getValue: T.() -> R) : Modificator","description":"jupyter.kotlin.Modificator.AddColumn","location":"lib/jupyter.kotlin/-modificator/-add-column/index.html","searchKeys":["AddColumn","data class AddColumn<T, R>(name: String, getValue: T.() -> R) : Modificator"]},{"name":"fun <T, R> AddColumn(name: String, getValue: T.() -> R)","description":"jupyter.kotlin.Modificator.AddColumn.AddColumn","location":"lib/jupyter.kotlin/-modificator/-add-column/-add-column.html","searchKeys":["AddColumn","fun <T, R> AddColumn(name: String, getValue: T.() -> R)"]},{"name":"operator fun component1(): String","description":"jupyter.kotlin.Modificator.AddColumn.component1","location":"lib/jupyter.kotlin/-modificator/-add-column/component1.html","searchKeys":["component1","operator fun component1(): String"]},{"name":"operator fun component1(): String","description":"jupyter.kotlin.Modificator.RemoveColumn.component1","location":"lib/jupyter.kotlin/-modificator/-remove-column/component1.html","searchKeys":["component1","operator fun component1(): String"]},{"name":"operator fun component1(): List<T>","description":"jupyter.kotlin.ModifiedList.component1","location":"lib/jupyter.kotlin/-modified-list/component1.html","searchKeys":["component1","operator fun component1(): List<T>"]},{"name":"operator fun component2(): T.() -> R","description":"jupyter.kotlin.Modificator.AddColumn.component2","location":"lib/jupyter.kotlin/-modificator/-add-column/component2.html","searchKeys":["component2","operator fun component2(): T.() -> R"]},{"name":"operator fun component2(): Modificator","description":"jupyter.kotlin.ModifiedList.component2","location":"lib/jupyter.kotlin/-modified-list/component2.html","searchKeys":["component2","operator fun component2(): Modificator"]},{"name":"fun copy(name: String, getValue: T.() -> R): Modificator.AddColumn<T, R>","description":"jupyter.kotlin.Modificator.AddColumn.copy","location":"lib/jupyter.kotlin/-modificator/-add-column/copy.html","searchKeys":["copy","fun copy(name: String, getValue: T.() -> R): Modificator.AddColumn<T, R>"]},{"name":"fun copy(name: String): Modificator.RemoveColumn","description":"jupyter.kotlin.Modificator.RemoveColumn.copy","location":"lib/jupyter.kotlin/-modificator/-remove-column/copy.html","searchKeys":["copy","fun copy(name: String): Modificator.RemoveColumn"]},{"name":"fun copy(source: List<T>, modificator: Modificator): ModifiedList<T>","description":"jupyter.kotlin.ModifiedList.copy","location":"lib/jupyter.kotlin/-modified-list/copy.html","searchKeys":["copy","fun copy(source: List<T>, modificator: Modificator): ModifiedList<T>"]},{"name":"val getValue: T.() -> R","description":"jupyter.kotlin.Modificator.AddColumn.getValue","location":"lib/jupyter.kotlin/-modificator/-add-column/get-value.html","searchKeys":["getValue","val getValue: T.() -> R"]},{"name":"data class RemoveColumn(name: String) : Modificator","description":"jupyter.kotlin.Modificator.RemoveColumn","location":"lib/jupyter.kotlin/-modificator/-remove-column/index.html","searchKeys":["RemoveColumn","data class RemoveColumn(name: String) : Modificator"]},{"name":"fun RemoveColumn(name: String)","description":"jupyter.kotlin.Modificator.RemoveColumn.RemoveColumn","location":"lib/jupyter.kotlin/-modificator/-remove-column/-remove-column.html","searchKeys":["RemoveColumn","fun RemoveColumn(name: String)"]},{"name":"data class ModifiedList<T>(source: List<T>, modificator: Modificator) : List<T> ","description":"jupyter.kotlin.ModifiedList","location":"lib/jupyter.kotlin/-modified-list/index.html","searchKeys":["ModifiedList","data class ModifiedList<T>(source: List<T>, modificator: Modificator) : List<T> "]},{"name":"fun <T> ModifiedList(source: List<T>, modificator: Modificator)","description":"jupyter.kotlin.ModifiedList.ModifiedList","location":"lib/jupyter.kotlin/-modified-list/-modified-list.html","searchKeys":["ModifiedList","fun <T> ModifiedList(source: List<T>, modificator: Modificator)"]},{"name":"val modificator: Modificator","description":"jupyter.kotlin.ModifiedList.modificator","location":"lib/jupyter.kotlin/-modified-list/modificator.html","searchKeys":["modificator","val modificator: Modificator"]},{"name":"val source: List<T>","description":"jupyter.kotlin.ModifiedList.source","location":"lib/jupyter.kotlin/-modified-list/source.html","searchKeys":["source","val source: List<T>"]},{"name":"annotation class Repository(value: String)","description":"jupyter.kotlin.Repository","location":"lib/jupyter.kotlin/-repository/index.html","searchKeys":["Repository","annotation class Repository(value: String)"]},{"name":"fun Repository(value: String = \"\")","description":"jupyter.kotlin.Repository.Repository","location":"lib/jupyter.kotlin/-repository/-repository.html","searchKeys":["Repository","fun Repository(value: String = \"\")"]},{"name":"abstract class ScriptTemplateWithDisplayHelpers(notebook: Notebook, hostProvider: KotlinKernelHostProvider)","description":"jupyter.kotlin.ScriptTemplateWithDisplayHelpers","location":"lib/jupyter.kotlin/-script-template-with-display-helpers/index.html","searchKeys":["ScriptTemplateWithDisplayHelpers","abstract class ScriptTemplateWithDisplayHelpers(notebook: Notebook, hostProvider: KotlinKernelHostProvider)"]},{"name":"fun ScriptTemplateWithDisplayHelpers(notebook: Notebook, hostProvider: KotlinKernelHostProvider)","description":"jupyter.kotlin.ScriptTemplateWithDisplayHelpers.ScriptTemplateWithDisplayHelpers","location":"lib/jupyter.kotlin/-script-template-with-display-helpers/-script-template-with-display-helpers.html","searchKeys":["ScriptTemplateWithDisplayHelpers","fun ScriptTemplateWithDisplayHelpers(notebook: Notebook, hostProvider: KotlinKernelHostProvider)"]},{"name":"fun DISPLAY(value: Any)","description":"jupyter.kotlin.ScriptTemplateWithDisplayHelpers.DISPLAY","location":"lib/jupyter.kotlin/-script-template-with-display-helpers/-d-i-s-p-l-a-y.html","searchKeys":["DISPLAY","fun DISPLAY(value: Any)"]},{"name":"fun EXECUTE(code: String)","description":"jupyter.kotlin.ScriptTemplateWithDisplayHelpers.EXECUTE","location":"lib/jupyter.kotlin/-script-template-with-display-helpers/-e-x-e-c-u-t-e.html","searchKeys":["EXECUTE","fun EXECUTE(code: String)"]},{"name":"val JavaRuntimeUtils: JREInfoProvider","description":"jupyter.kotlin.ScriptTemplateWithDisplayHelpers.JavaRuntimeUtils","location":"lib/jupyter.kotlin/-script-template-with-display-helpers/-java-runtime-utils.html","searchKeys":["JavaRuntimeUtils","val JavaRuntimeUtils: JREInfoProvider"]},{"name":"val Out: ResultsAccessor","description":"jupyter.kotlin.ScriptTemplateWithDisplayHelpers.Out","location":"lib/jupyter.kotlin/-script-template-with-display-helpers/-out.html","searchKeys":["Out","val Out: ResultsAccessor"]},{"name":"val notebook: Notebook","description":"jupyter.kotlin.ScriptTemplateWithDisplayHelpers.notebook","location":"lib/jupyter.kotlin/-script-template-with-display-helpers/notebook.html","searchKeys":["notebook","val notebook: Notebook"]},{"name":"fun <T, R> List<T>.addColumn(name: String, value: T.() -> R): ModifiedList<T>","description":"jupyter.kotlin.addColumn","location":"lib/jupyter.kotlin/add-column.html","searchKeys":["addColumn","fun <T, R> List<T>.addColumn(name: String, value: T.() -> R): ModifiedList<T>"]},{"name":"class ConstReceiver(value: Int)","description":"jupyter.kotlin.receivers.ConstReceiver","location":"lib/jupyter.kotlin.receivers/-const-receiver/index.html","searchKeys":["ConstReceiver","class ConstReceiver(value: Int)"]},{"name":"fun ConstReceiver(value: Int)","description":"jupyter.kotlin.receivers.ConstReceiver.ConstReceiver","location":"lib/jupyter.kotlin.receivers/-const-receiver/-const-receiver.html","searchKeys":["ConstReceiver","fun ConstReceiver(value: Int)"]},{"name":"annotation class TempAnnotation","description":"jupyter.kotlin.receivers.TempAnnotation","location":"lib/jupyter.kotlin.receivers/-temp-annotation/index.html","searchKeys":["TempAnnotation","annotation class TempAnnotation"]},{"name":"fun TempAnnotation()","description":"jupyter.kotlin.receivers.TempAnnotation.TempAnnotation","location":"lib/jupyter.kotlin.receivers/-temp-annotation/-temp-annotation.html","searchKeys":["TempAnnotation","fun TempAnnotation()"]},{"name":"fun <T> List<T>.removeColumn(name: String): ModifiedList<T>","description":"jupyter.kotlin.removeColumn","location":"lib/jupyter.kotlin/remove-column.html","searchKeys":["removeColumn","fun <T> List<T>.removeColumn(name: String): ModifiedList<T>"]}]
